#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'
require 'set'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 673)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CHANGE
  CREATE
  CONTAINS
  COUNT
  DELETE
  DEL
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEW_AND_OLD_IMAGES
  NEW_IMAGE
  NEXT
  NOT
  NUMBER
  OLD_IMAGE
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STREAM
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.check KEYWORD_REGEXP) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan KEYWORD_REGEXP
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.check /NULL/i) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan /NULL/i
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/\[\]\{\}:]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_]*|i)
      if ['true', 'false'].include?(tok)
        yield [:BOOL, 'true' == tok]
      else
        yield [:IDENTIFIER, tok]
      end
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
   190,   190,   276,   308,   121,   234,   274,   190,    57,    55,
   220,   203,    55,   190,    55,   192,   192,   204,    55,   185,
   185,   229,   192,   118,   307,   190,   185,    27,   192,   228,
   189,   189,   185,    58,   190,   233,    52,   189,   304,    51,
   192,    76,    53,   189,   185,    53,    50,    53,   304,   192,
   275,    53,   273,   185,   103,   189,   186,   186,   305,   229,
   102,   138,   300,   186,   189,   279,   304,   228,   305,   186,
   187,   187,   188,   188,   280,   191,   191,   187,   222,   188,
   235,   186,   191,   187,   190,   188,   305,   144,   191,   339,
   186,   104,   190,   190,   225,   187,   245,   188,   340,   192,
   191,   190,   190,   185,   187,   143,   188,   192,   192,   191,
   118,   185,   185,   166,   189,   241,   192,   192,   137,    97,
   185,   185,   189,   189,   118,    98,   167,   168,   166,   353,
   114,   189,   189,   143,   104,    72,   190,    99,   340,   100,
   186,   167,   168,   267,   242,   243,   244,   246,   186,   186,
   150,   192,   151,   151,   187,   185,   188,   186,   186,   191,
   190,   151,   187,   187,   188,   188,   189,   191,   191,   190,
   190,   187,   187,   188,   188,   192,   191,   191,    72,   185,
    43,    98,    98,   155,   192,   192,    44,   363,   185,   185,
   189,   166,   186,    99,    99,   100,   100,   362,   364,   189,
   189,   166,   363,    60,   167,   168,   187,   166,   188,    59,
   136,   191,   362,   364,   167,   168,   186,   162,     3,     4,
   167,   168,   163,    18,   245,   186,   186,   281,    23,   283,
   187,    21,   188,   164,    22,   191,   282,   377,   284,   187,
   187,   188,   188,   241,   191,   191,   378,    38,    39,   205,
    40,    41,    99,   206,   100,   134,    24,    25,    26,    27,
    82,    83,    84,    85,    28,   156,   158,   159,   160,   161,
   133,   249,   242,   243,   244,   246,   248,   250,   253,   254,
   255,    99,    29,   100,    99,    30,   100,    31,   291,   290,
    32,    34,    35,    36,   173,    37,    82,    83,    84,    85,
   368,    99,   369,   100,   174,   175,   151,   177,   178,   114,
   132,   130,   129,   195,   196,   199,    66,   201,   104,   128,
   127,    98,   124,   209,   120,    98,   213,   216,   217,   218,
    66,   139,   221,   118,    72,   114,    66,    66,   150,   111,
   240,   110,   256,   257,   258,   259,   260,   109,   261,   263,
   199,   265,   108,   269,   136,   271,   151,   107,   106,   277,
   278,   105,   104,    94,   199,    91,   192,    92,    91,   292,
   294,   295,   296,   297,   298,    89,    66,    88,   240,   216,
    87,    86,   312,   173,   151,    66,    79,    78,    77,    74,
   320,   321,   322,   323,   324,   325,    73,   328,   329,   330,
    72,   332,   333,   334,   213,    66,    70,   338,    69,    68,
   342,   343,   344,    67,   263,    66,    64,   349,   350,   351,
    66,    63,    62,    61,   357,   330,   358,   359,    48,    47,
    46,   366,   367,    45,   371,   373,   374,   375,    42,    33,
   379,   380,   381,   204,   206 ]

racc_action_check = [
   294,   144,   226,   263,    89,   192,   223,   187,    29,    51,
   177,   162,    28,   323,    27,   294,   144,   162,   109,   294,
   144,   188,   187,   111,   263,   196,   187,    89,   323,   188,
   294,   144,   323,    29,   277,   192,    27,   187,   330,    27,
   196,    51,    51,   323,   196,    28,    27,    27,   349,   277,
   226,   109,   223,   277,    70,   196,   294,   144,   330,   276,
    70,   107,   261,   187,   277,   230,   261,   276,   349,   323,
   294,   144,   294,   144,   230,   294,   144,   187,   187,   187,
   192,   196,   187,   323,   274,   323,   261,   114,   323,   326,
   277,   115,   334,   338,   188,   196,   216,   196,   326,   274,
   196,   340,   267,   274,   277,   112,   277,   334,   338,   277,
   115,   334,   338,   350,   274,   216,   340,   267,   106,    69,
   340,   267,   334,   338,   112,    69,   350,   350,   132,   347,
   116,   340,   267,   146,   147,   117,   266,    69,   347,    69,
   274,   132,   132,   216,   216,   216,   216,   216,   334,   338,
   118,   266,   146,   147,   274,   266,   274,   340,   267,   274,
   249,   120,   334,   338,   334,   338,   266,   334,   338,   278,
   247,   340,   267,   340,   267,   249,   340,   267,   121,   249,
    22,   164,   133,   127,   278,   247,    22,   358,   278,   247,
   249,   371,   266,   164,   133,   164,   133,   358,   358,   278,
   247,   357,   359,    30,   371,   371,   266,   300,   266,    30,
   105,   266,   359,   359,   357,   357,   249,   129,     0,     0,
   300,   300,   130,     0,   199,   278,   247,   231,     0,   232,
   249,     0,   249,   131,     0,   249,   231,   372,   232,   278,
   247,   278,   247,   199,   278,   247,   372,    18,    18,   163,
    18,    18,    96,   163,    96,   104,     0,     0,     0,     0,
    86,    86,    86,    86,     0,   128,   128,   128,   128,   128,
   103,   199,   199,   199,   199,   199,   199,   199,   199,   199,
   199,   155,     0,   155,   208,     0,   208,     0,   250,   250,
     0,     2,     2,     2,   135,     2,    57,    57,    57,    57,
   365,   169,   365,   169,   136,   137,   138,   139,   140,   143,
   102,   100,    99,   148,   150,   151,   152,   153,   154,    98,
    97,    95,    91,   165,    88,   171,   172,   173,   174,   175,
   176,   108,   178,    87,    81,    80,   193,   194,   195,    79,
   197,    78,   201,   203,   204,   205,   206,    77,   209,   212,
   213,   214,    76,   217,   218,   220,   221,    75,    74,   228,
   229,    73,    71,    68,   240,    67,   248,    66,    65,   255,
   256,   257,   258,   259,   260,    61,   262,    60,   264,   265,
    59,    58,   269,   270,   271,   272,    56,    54,    52,    50,
   280,   282,   284,   288,   291,   293,    49,   295,   297,   299,
    46,   304,   305,   311,   313,   314,    45,   325,    42,    41,
   331,   332,   333,    39,   335,    38,    37,   342,   343,   344,
   346,    36,    33,    31,   351,   354,   355,   356,    26,    25,
    24,   360,   364,    23,   366,   367,   368,   369,    21,     1,
   374,   375,   378,   379,   380 ]

racc_action_pointer = [
   216,   439,   289,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   239,   nil,
   nil,   429,   167,   424,   421,   416,   415,     1,    -1,    -5,
   165,   351,   nil,   422,   nil,   nil,   416,   411,   351,   403,
   nil,   400,   395,   nil,   nil,   393,   387,   nil,   nil,   352,
   369,    -4,   341,   nil,   357,   nil,   342,   229,   368,   367,
   333,   362,   nil,   nil,   nil,   354,   332,   351,   350,   103,
    40,   332,   nil,   348,   312,   313,   332,   312,   328,   326,
   322,   321,   nil,   nil,   nil,   nil,   193,   284,   311,   -16,
   nil,   317,   nil,   nil,   nil,   299,   218,   303,   296,   289,
   288,   nil,   297,   257,   242,   192,    97,    48,   285,     5,
   nil,   -26,    75,   nil,    64,    61,   117,   122,   137,   nil,
   112,   165,   nil,   nil,   nil,   nil,   nil,   170,   241,   182,
   187,   212,   109,   160,   nil,   245,   287,   261,   257,   286,
   264,   nil,   nil,   296,    -4,   nil,   103,   104,   263,   nil,
   291,   302,   252,   296,   288,   247,   nil,   nil,   nil,   nil,
   nil,   nil,   -19,   219,   159,   294,   nil,   nil,   nil,   267,
   nil,   303,   261,   314,   308,   316,   266,   -34,   319,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,    16,   nil,
   nil,   nil,     0,   272,   273,   325,    20,   290,   nil,   220,
   nil,   269,   nil,   307,   321,   311,   323,   nil,   250,   318,
   nil,   nil,   287,   337,   301,   nil,    92,   340,   336,   nil,
   342,   307,   nil,   -24,   nil,   nil,   -28,   nil,   280,   281,
    44,   206,   208,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   351,   nil,   nil,   nil,   nil,   nil,   nil,   165,   346,   155,
   228,   nil,   nil,   nil,   nil,   310,   350,   348,   337,   350,
   339,    49,   312,   -39,   328,   366,   131,    97,   nil,   361,
   334,   335,   321,   nil,    79,   nil,    54,    29,   164,   nil,
   355,   nil,   386,   nil,   312,   nil,   nil,   nil,   343,   nil,
   nil,   333,   nil,   365,    -5,   362,   nil,   363,   nil,   369,
   188,   nil,   nil,   nil,   388,   385,   nil,   nil,   nil,   nil,
   nil,   353,   nil,   339,   341,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     8,   nil,   387,    68,   nil,   nil,   nil,
    21,   379,   391,   399,    87,   352,   nil,   nil,    88,   nil,
    96,   nil,   387,   405,   399,   nil,   356,   108,   nil,    31,
    94,   411,   nil,   nil,   395,   405,   406,   182,   159,   174,
   401,   nil,   nil,   nil,   412,   266,   421,   422,   413,   414,
   nil,   172,   216,   nil,   405,   406,   nil,   nil,   429,   407,
   410,   nil ]

racc_action_default = [
  -181,  -181,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -181,   -27,
   -28,  -181,  -181,  -181,  -181,  -181,  -181,  -181,  -181,  -181,
  -181,  -181,  -150,  -181,    -2,    -3,  -181,  -181,  -121,  -181,
   -23,  -181,  -181,   -34,   -35,  -181,  -181,   -76,   -77,  -181,
  -181,  -181,  -181,   -84,   -85,   -86,  -181,  -181,  -181,  -181,
  -181,  -181,   382,    -4,    -5,   -25,  -181,   -25,  -181,  -181,
  -181,   -75,  -179,  -181,  -181,  -181,  -181,  -181,  -181,  -181,
  -181,  -181,  -129,  -130,  -131,  -132,  -181,  -181,  -181,  -181,
   -21,  -181,  -122,   -22,   -24,   -29,   -30,  -181,  -181,  -181,
  -181,   -58,  -181,  -181,  -181,   -88,  -181,  -181,  -181,  -181,
   -87,  -181,  -181,  -133,  -181,  -181,  -181,  -181,  -181,  -140,
  -103,  -181,  -143,  -144,   -26,   -31,   -32,  -181,  -181,  -181,
  -181,  -181,  -181,   -37,  -180,   -90,  -181,  -181,  -103,  -181,
  -181,   -83,  -125,  -181,  -181,  -127,  -103,  -103,  -136,  -137,
  -181,  -181,  -121,  -181,  -145,  -181,   -43,   -44,   -45,   -46,
   -47,   -48,  -181,  -181,  -181,  -181,   -53,   -54,   -55,   -38,
   -39,   -40,  -123,  -181,  -181,  -181,  -121,  -181,  -181,  -134,
  -135,  -151,  -152,  -153,  -154,  -155,  -156,  -181,  -181,  -167,
  -168,  -169,  -181,  -121,  -121,  -181,  -181,  -104,  -105,  -181,
  -141,  -181,   -33,  -181,  -181,  -181,  -181,   -36,  -181,   -49,
   -42,   -41,  -118,  -181,   -91,   -92,  -181,  -181,   -88,   -80,
  -181,  -103,  -157,  -181,  -159,  -161,  -181,  -163,  -181,  -181,
  -181,  -181,  -181,  -173,  -175,  -177,  -126,  -128,  -138,  -139,
  -181,   -97,   -98,   -99,  -100,  -101,  -102,  -181,  -181,  -181,
  -181,  -111,  -112,  -113,  -114,  -181,  -181,  -181,  -181,  -181,
  -181,  -181,  -121,  -181,  -124,  -181,  -181,  -181,   -96,  -181,
   -90,  -103,  -121,  -158,  -181,  -162,  -181,  -181,  -181,  -170,
  -181,  -171,  -181,  -172,  -181,  -106,  -107,  -108,  -181,  -110,
  -116,  -181,  -115,  -142,  -181,  -181,   -59,  -181,   -60,   -50,
  -181,   -61,   -63,   -64,  -181,  -181,   -78,  -119,  -120,   -93,
   -94,  -181,   -89,  -123,  -121,   -82,  -160,  -164,  -165,  -166,
  -174,  -176,  -178,  -181,  -117,  -181,  -181,  -148,   -56,   -57,
  -181,  -181,  -181,  -181,  -181,  -118,   -81,  -109,  -181,  -146,
  -181,   -62,   -51,  -181,  -181,   -95,  -121,  -181,  -149,  -181,
  -181,  -181,   -79,  -147,   -52,  -181,  -181,  -181,  -181,  -181,
   -68,   -65,   -70,   -71,  -181,   -66,  -181,  -181,  -181,  -181,
   -67,  -181,  -181,   -73,  -181,  -181,   -69,   -72,  -181,  -181,
  -181,   -74 ]

racc_goto_table = [
    65,   165,   180,   152,   212,   172,   262,   135,    95,   215,
    11,    96,   227,    12,   149,   299,    49,    56,    71,   197,
   326,   176,   112,    80,   170,   251,    90,    81,    93,   193,
   194,   361,   365,     1,   356,   126,   372,   125,   119,   370,
    75,   157,   268,   131,    20,   224,    19,   341,    17,    16,
   214,    15,   116,   115,   239,   207,   117,   266,   146,    14,
    13,    10,   141,   142,   347,   285,   145,   247,   287,   289,
   252,     9,     8,     7,   179,   169,   148,     6,   153,   293,
     5,   264,   223,   226,     2,   230,   231,   232,   nil,   147,
   nil,   238,   nil,   154,   202,   nil,   nil,   nil,   140,   122,
   317,   309,   123,   354,   272,   286,   208,   288,   210,   nil,
   nil,   nil,   nil,   211,   200,   nil,   nil,   nil,   nil,   nil,
   270,   nil,   nil,   nil,   310,   311,   nil,   nil,   nil,   346,
   nil,   nil,   316,   nil,   nil,   318,   319,   nil,   219,   nil,
   313,   nil,   nil,   nil,   nil,   335,   nil,   210,   nil,   nil,
   nil,   nil,   nil,   nil,   314,   236,   237,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   331,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   337,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   345,   nil,   nil,   nil,   nil,   nil,   348,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   355,
   nil,   nil,   nil,   nil,   306,   nil,   360,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   315,   nil,   nil,   nil,   nil,   nil,
   376,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   336,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   352 ]

racc_goto_check = [
    16,    25,    46,    40,    38,    37,    39,    36,    20,    44,
     9,    21,    68,    10,    59,    26,    35,    35,    34,    48,
    62,    40,    55,    54,    23,    47,    17,    56,    17,    40,
    40,    31,    31,     1,    32,    20,    33,    21,    41,    27,
    35,    24,    47,    22,    19,    46,    18,    28,    15,    14,
    43,    13,    54,    34,    46,    23,    56,    45,    55,    12,
    11,     8,    41,    41,    62,    49,    41,    50,    51,    52,
    53,     7,     6,     5,    57,    21,    58,     4,    60,    61,
     3,    48,    66,    67,     2,    69,    70,    71,   nil,    34,
   nil,    59,   nil,    34,    20,   nil,   nil,   nil,    35,     9,
    68,    44,    10,    26,    40,    46,    21,    46,    20,   nil,
   nil,   nil,   nil,    21,    16,   nil,   nil,   nil,   nil,   nil,
    36,   nil,   nil,   nil,    46,    46,   nil,   nil,   nil,    39,
   nil,   nil,    46,   nil,   nil,    46,    46,   nil,    16,   nil,
    37,   nil,   nil,   nil,   nil,    38,   nil,    20,   nil,   nil,
   nil,   nil,   nil,   nil,    40,    16,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    46,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    46,   nil,   nil,   nil,   nil,   nil,    46,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,    16,   nil,    25,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    33,    84,    80,    77,    73,    72,    71,    61,    10,
    13,    60,    59,    51,    49,    48,   -38,   -39,    46,    44,
   -61,   -58,   -59,  -109,   -87,  -131,  -246,  -326,  -283,   nil,
   nil,  -327,  -317,  -331,   -28,   -11,   -98,  -130,  -168,  -206,
  -117,   -49,   nil,  -123,  -164,  -159,  -142,  -174,  -132,  -175,
  -132,  -180,  -181,  -129,   -34,   -58,   -30,   -69,   -42,  -104,
   -43,  -177,  -274,   nil,   nil,   nil,  -105,  -105,  -176,  -107,
  -106,  -105 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   171,   nil,   nil,   nil,   nil,   nil,   nil,   101,   301,   302,
   303,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    54,   nil,   nil,   nil,   327,   nil,   nil,   198,
   nil,   182,   nil,   nil,   nil,   nil,   nil,   113,   nil,   nil,
   nil,   nil,   nil,   181,   183,   184,   nil,   nil,   nil,   nil,
   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 82, :_reduce_1,
  2, 82, :_reduce_2,
  2, 82, :_reduce_3,
  3, 82, :_reduce_4,
  3, 82, :_reduce_5,
  1, 82, :_reduce_6,
  1, 82, :_reduce_7,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  4, 84, :_reduce_21,
  4, 84, :_reduce_22,
  2, 84, :_reduce_23,
  4, 84, :_reduce_24,
  0, 98, :_reduce_none,
  2, 98, :_reduce_26,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  4, 99, :_reduce_29,
  4, 99, :_reduce_30,
  5, 99, :_reduce_31,
  5, 99, :_reduce_32,
  7, 100, :_reduce_33,
  2, 86, :_reduce_34,
  2, 86, :_reduce_35,
  7, 87, :_reduce_36,
  5, 87, :_reduce_37,
  6, 87, :_reduce_38,
  6, 87, :_reduce_39,
  1, 104, :_reduce_40,
  2, 104, :_reduce_41,
  2, 104, :_reduce_42,
  3, 102, :_reduce_43,
  3, 102, :_reduce_44,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  1, 105, :_reduce_none,
  3, 103, :_reduce_49,
  5, 103, :_reduce_50,
  7, 103, :_reduce_51,
  9, 103, :_reduce_52,
  1, 106, :_reduce_53,
  1, 106, :_reduce_54,
  1, 106, :_reduce_55,
  7, 101, :_reduce_56,
  7, 101, :_reduce_57,
  1, 101, :_reduce_none,
  6, 108, :_reduce_59,
  6, 108, :_reduce_60,
  1, 107, :_reduce_61,
  3, 107, :_reduce_62,
  1, 109, :_reduce_none,
  1, 109, :_reduce_none,
  7, 110, :_reduce_65,
  7, 111, :_reduce_66,
  8, 111, :_reduce_67,
  2, 113, :_reduce_68,
  5, 113, :_reduce_69,
  1, 112, :_reduce_70,
  1, 112, :_reduce_71,
  4, 112, :_reduce_72,
  1, 114, :_reduce_73,
  3, 114, :_reduce_74,
  3, 88, :_reduce_75,
  2, 89, :_reduce_76,
  2, 89, :_reduce_77,
  9, 90, :_reduce_78,
  12, 90, :_reduce_79,
  7, 91, :_reduce_80,
  10, 91, :_reduce_81,
  9, 91, :_reduce_82,
  5, 92, :_reduce_83,
  1, 116, :_reduce_84,
  1, 116, :_reduce_85,
  1, 123, :_reduce_86,
  3, 123, :_reduce_87,
  0, 117, :_reduce_none,
  5, 117, :_reduce_89,
  0, 118, :_reduce_none,
  2, 118, :_reduce_91,
  1, 124, :_reduce_92,
  3, 124, :_reduce_93,
  3, 125, :_reduce_94,
  5, 125, :_reduce_95,
  1, 126, :_reduce_none,
  1, 128, :_reduce_97,
  1, 128, :_reduce_98,
  1, 128, :_reduce_99,
  1, 128, :_reduce_100,
  1, 128, :_reduce_101,
  1, 128, :_reduce_none,
  0, 121, :_reduce_none,
  2, 121, :_reduce_104,
  1, 129, :_reduce_105,
  3, 129, :_reduce_106,
  3, 130, :_reduce_107,
  3, 130, :_reduce_108,
  5, 130, :_reduce_109,
  3, 130, :_reduce_110,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  1, 131, :_reduce_113,
  1, 134, :_reduce_none,
  2, 134, :_reduce_115,
  1, 133, :_reduce_116,
  2, 133, :_reduce_117,
  0, 120, :_reduce_none,
  2, 120, :_reduce_119,
  2, 120, :_reduce_120,
  0, 97, :_reduce_none,
  2, 97, :_reduce_122,
  0, 119, :_reduce_none,
  2, 119, :_reduce_124,
  5, 93, :_reduce_125,
  7, 93, :_reduce_126,
  5, 93, :_reduce_127,
  7, 93, :_reduce_128,
  1, 135, :_reduce_129,
  1, 135, :_reduce_130,
  1, 137, :_reduce_131,
  1, 137, :_reduce_132,
  1, 136, :_reduce_133,
  3, 136, :_reduce_134,
  3, 138, :_reduce_135,
  2, 122, :_reduce_136,
  1, 139, :_reduce_137,
  3, 139, :_reduce_138,
  3, 140, :_reduce_139,
  4, 94, :_reduce_140,
  6, 94, :_reduce_141,
  8, 95, :_reduce_142,
  4, 95, :_reduce_143,
  4, 95, :_reduce_144,
  1, 141, :_reduce_none,
  3, 142, :_reduce_146,
  5, 142, :_reduce_147,
  1, 143, :_reduce_148,
  3, 143, :_reduce_149,
  1, 96, :_reduce_150,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  2, 145, :_reduce_none,
  3, 145, :_reduce_158,
  1, 147, :_reduce_159,
  3, 147, :_reduce_160,
  2, 146, :_reduce_161,
  3, 146, :_reduce_162,
  1, 148, :_reduce_none,
  3, 148, :_reduce_164,
  3, 149, :_reduce_165,
  3, 149, :_reduce_166,
  1, 144, :_reduce_none,
  1, 144, :_reduce_none,
  1, 144, :_reduce_none,
  3, 132, :_reduce_170,
  3, 132, :_reduce_171,
  3, 132, :_reduce_172,
  1, 150, :_reduce_173,
  3, 150, :_reduce_174,
  1, 151, :_reduce_175,
  3, 151, :_reduce_176,
  1, 152, :_reduce_177,
  3, 152, :_reduce_178,
  1, 115, :_reduce_179,
  3, 115, :_reduce_180 ]

racc_reduce_n = 181

racc_shift_n = 382

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :CHANGE => 16,
  :INDEX => 17,
  :USE => 18,
  :STRING => 19,
  "(" => 20,
  ")" => 21,
  :STREAM => 22,
  :EQ => 23,
  :BOOL => 24,
  :NEW_IMAGE => 25,
  :OLD_IMAGE => 26,
  :NEW_AND_OLD_IMAGES => 27,
  :KEYS_ONLY => 28,
  :HASH => 29,
  "," => 30,
  :RANGE => 31,
  :NUMBER => 32,
  :BINARY => 33,
  :READ => 34,
  :NUMBER_VALUE => 35,
  :WRITE => 36,
  :GLOBAL => 37,
  :ALL => 38,
  :INCLUDE => 39,
  :DROP => 40,
  :DESCRIBE => 41,
  :DESC => 42,
  :SELECT => 43,
  :FROM => 44,
  :COUNT => 45,
  "*" => 46,
  "/" => 47,
  :GET => 48,
  :WHERE => 49,
  :AND => 50,
  :BETWEEN => 51,
  :LE => 52,
  :LT => 53,
  :GE => 54,
  :BEGINS_WITH => 55,
  :IN => 56,
  :IS => 57,
  :NE => 58,
  :CONTAINS => 59,
  :NOT => 60,
  :NULL => 61,
  :ORDER => 62,
  :ASC => 63,
  :LIMIT => 64,
  :HAVING => 65,
  :UPDATE => 66,
  :SET => 67,
  :ADD => 68,
  :DELETE => 69,
  :DEL => 70,
  :INSERT => 71,
  :INTO => 72,
  :VALUES => 73,
  :NEXT => 74,
  "[" => 75,
  "]" => 76,
  "{" => 77,
  "}" => 78,
  ":" => 79,
  :BINARY_VALUE => 80 }

racc_nt_base = 81

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "CHANGE",
  "INDEX",
  "USE",
  "STRING",
  "\"(\"",
  "\")\"",
  "STREAM",
  "EQ",
  "BOOL",
  "NEW_IMAGE",
  "OLD_IMAGE",
  "NEW_AND_OLD_IMAGES",
  "KEYS_ONLY",
  "HASH",
  "\",\"",
  "RANGE",
  "NUMBER",
  "BINARY",
  "READ",
  "NUMBER_VALUE",
  "WRITE",
  "GLOBAL",
  "ALL",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "DEL",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\":\"",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "alter_table_stmt",
  "alter_table_index_stmt",
  "capacity_clause",
  "stream_clause",
  "create_definition",
  "capacity_stream_clause",
  "stream_view_type",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "locat_index_definition",
  "global_index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "delete_or_del",
  "attr_to_update",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "list",
  "map",
  "list_items",
  "map_items",
  "map_item",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 75)
  def _reduce_29(val, _values)
                            struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3], :stream => nil)
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 79)
  def _reduce_30(val, _values)
                            struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => nil, :stream => val[3])
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 83)
  def _reduce_31(val, _values)
                            struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3], :stream => val[4])
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 87)
  def _reduce_32(val, _values)
                            struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[4], :stream => val[3])
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 92)
  def _reduce_33(val, _values)
                                 struct(:ALTER_TABLE_INDEX, :table => val[2], :index_name => val[5], :capacity => val[6], :stream => nil)
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 97)
  def _reduce_34(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 102)
  def _reduce_35(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 107)
  def _reduce_36(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6][:capacity], :stream => val[6][:stream]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 111)
  def _reduce_37(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil, :stream => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 115)
  def _reduce_38(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil, :stream => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 119)
  def _reduce_39(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5][:capacity], :stream => val[5][:stream])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 124)
  def _reduce_40(val, _values)
                                {:capacity => val[0], :stream => nil}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 128)
  def _reduce_41(val, _values)
                                {:capacity => val[0], :stream => val[1]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 132)
  def _reduce_42(val, _values)
                                {:capacity => val[1], :stream => val[0]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 137)
  def _reduce_43(val, _values)
                        val[2]
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 141)
  def _reduce_44(val, _values)
                        val[2]
                  
  end
.,.,

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 151)
  def _reduce_49(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 155)
  def _reduce_50(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => val[4]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 159)
  def _reduce_51(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 163)
  def _reduce_52(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 168)
  def _reduce_53(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 172)
  def _reduce_54(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 176)
  def _reduce_55(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 181)
  def _reduce_56(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 185)
  def _reduce_57(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 191)
  def _reduce_59(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 195)
  def _reduce_60(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 200)
  def _reduce_61(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 204)
  def _reduce_62(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

# reduce 63 omitted

# reduce 64 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 212)
  def _reduce_65(val, _values)
                                 {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 217)
  def _reduce_66(val, _values)
                                  {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                            
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 221)
  def _reduce_67(val, _values)
                                  {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                            
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 226)
  def _reduce_68(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 230)
  def _reduce_69(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 238)
  def _reduce_70(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 242)
  def _reduce_71(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 246)
  def _reduce_72(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 251)
  def _reduce_73(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 255)
  def _reduce_74(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 260)
  def _reduce_75(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 265)
  def _reduce_76(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 269)
  def _reduce_77(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 274)
  def _reduce_78(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 278)
  def _reduce_79(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 283)
  def _reduce_80(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 287)
  def _reduce_81(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 291)
  def _reduce_82(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 296)
  def _reduce_83(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 301)
  def _reduce_84(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 305)
  def _reduce_85(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 310)
  def _reduce_86(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 314)
  def _reduce_87(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 88 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 320)
  def _reduce_89(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 90 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 326)
  def _reduce_91(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 331)
  def _reduce_92(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 335)
  def _reduce_93(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 340)
  def _reduce_94(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 344)
  def _reduce_95(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 96 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 351)
  def _reduce_97(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 355)
  def _reduce_98(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 359)
  def _reduce_99(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 363)
  def _reduce_100(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 367)
  def _reduce_101(val, _values)
                          :GT
                    
  end
.,.,

# reduce 102 omitted

# reduce 103 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 374)
  def _reduce_104(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 379)
  def _reduce_105(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 383)
  def _reduce_106(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 388)
  def _reduce_107(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 392)
  def _reduce_108(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 396)
  def _reduce_109(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 400)
  def _reduce_110(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 406)
  def _reduce_113(val, _values)
                      :NE
                
  end
.,.,

# reduce 114 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 412)
  def _reduce_115(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 416)
  def _reduce_116(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 420)
  def _reduce_117(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 118 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 426)
  def _reduce_119(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 430)
  def _reduce_120(val, _values)
                       false
                 
  end
.,.,

# reduce 121 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 436)
  def _reduce_122(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 123 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 442)
  def _reduce_124(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 447)
  def _reduce_125(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 451)
  def _reduce_126(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 455)
  def _reduce_127(val, _values)
                      attrs = {}
                  val[3].each {|i| attrs[i] = true }
                  struct(:UPDATE, :table => val[1], :action => val[2], :attrs => attrs, :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 461)
  def _reduce_128(val, _values)
                      attrs = {}
                  val[4].each {|i| attrs[i] = true }
                  struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => attrs, :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 468)
  def _reduce_129(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 472)
  def _reduce_130(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 477)
  def _reduce_131(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 481)
  def _reduce_132(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 486)
  def _reduce_133(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 490)
  def _reduce_134(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 495)
  def _reduce_135(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 500)
  def _reduce_136(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 505)
  def _reduce_137(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 509)
  def _reduce_138(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 514)
  def _reduce_139(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 519)
  def _reduce_140(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 523)
  def _reduce_141(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 528)
  def _reduce_142(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 532)
  def _reduce_143(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 536)
  def _reduce_144(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 145 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 543)
  def _reduce_146(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 547)
  def _reduce_147(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 552)
  def _reduce_148(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 556)
  def _reduce_149(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 561)
  def _reduce_150(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 574)
  def _reduce_158(val, _values)
               val[1]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 579)
  def _reduce_159(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 583)
  def _reduce_160(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 588)
  def _reduce_161(val, _values)
              {}
        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 592)
  def _reduce_162(val, _values)
              val[1]
        
  end
.,.,

# reduce 163 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 598)
  def _reduce_164(val, _values)
                    val[0].merge(val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 603)
  def _reduce_165(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 607)
  def _reduce_166(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 616)
  def _reduce_170(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 620)
  def _reduce_171(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 624)
  def _reduce_172(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 629)
  def _reduce_173(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 633)
  def _reduce_174(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 638)
  def _reduce_175(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 642)
  def _reduce_176(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 647)
  def _reduce_177(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 651)
  def _reduce_178(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 656)
  def _reduce_179(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 660)
  def _reduce_180(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
