#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'
require 'set'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 645)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CHANGE
  CREATE
  CONTAINS
  COUNT
  DELETE
  DEL
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEW_AND_OLD_IMAGES
  NEW_IMAGE
  NEXT
  NOT
  NUMBER
  OLD_IMAGE
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STREAM
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.check KEYWORD_REGEXP) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan KEYWORD_REGEXP
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.check /NULL/i) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan /NULL/i
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/\[\]\{\}:]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_]*|i)
      if ['true', 'false'].include?(tok)
        yield [:BOOL, 'true' == tok]
      else
        yield [:IDENTIFIER, tok]
      end
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
   178,   269,   299,   222,   178,   267,    55,    53,   100,   117,
    53,   178,    53,   217,   193,   180,   136,   217,   194,   180,
   293,   216,   178,   298,   295,   216,   180,   144,   295,   177,
    56,    25,   221,   177,   178,   114,   209,   180,   178,    51,
   177,    74,    51,   296,    51,    94,   295,   296,   153,   180,
   268,   177,   266,   180,   132,   174,   178,   284,   283,   174,
   154,   155,    95,   177,    96,   296,   174,   177,   137,   173,
   175,   180,   176,   173,   175,   179,   176,   174,   223,   179,
   173,   175,   210,   176,   131,   177,   179,   178,   159,   174,
   213,   173,   175,   174,   176,   136,   110,   179,   100,    95,
   178,    96,   180,   173,   175,    70,   176,   173,   175,   179,
   176,   174,   178,   179,   144,   180,   177,   114,    41,   178,
   153,   143,    53,   178,    42,   173,   175,   180,   176,   177,
   144,   179,   154,   155,   180,   178,   159,   330,   180,    70,
   148,   177,   174,    50,   149,   331,    49,    95,   177,    96,
   180,   178,   177,    48,    51,   174,   173,   175,   150,   176,
   272,   151,   179,   274,   177,   344,   180,   174,   273,   173,
   175,   275,   176,   331,   174,   179,   130,    99,   174,   129,
   177,   173,   175,    98,   176,   178,   161,   179,   173,   175,
   174,   176,   173,   175,   179,   176,   153,   162,   179,   153,
   180,   163,   144,   153,   173,   175,   174,   176,   154,   155,
   179,   154,   155,   165,   177,   154,   155,   368,   166,   276,
   173,   175,   110,   176,   354,   369,   179,   277,     3,     4,
   233,   191,   354,    18,   353,   355,   127,   192,    21,    58,
   174,    19,   353,   355,    20,    57,   126,    36,    37,   229,
    38,    39,   125,   183,   173,   175,   233,   176,   184,   187,
   179,    80,    81,    82,    83,    22,    23,    24,    25,    64,
    32,    33,    34,    26,    35,   229,   237,   230,   231,   232,
   234,   236,   238,   241,   242,   243,   251,   252,   253,   254,
    95,    27,    96,   359,    28,   360,    29,   189,    95,    30,
    96,   100,   260,   230,   231,   232,   234,    80,    81,    82,
    83,   123,   122,   121,   120,   196,   159,   116,   199,   201,
   204,   205,   206,    64,   208,   114,   114,    70,   110,    64,
    64,   143,   107,   228,   106,   244,   245,   246,   247,   248,
   249,   105,   256,   187,   258,   104,   262,   129,   264,   144,
   103,   102,   270,   271,   101,   100,    92,   187,    89,   180,
    90,    89,   285,   287,   288,   289,   290,   291,    87,    64,
    86,   228,   204,    85,    84,   303,   161,   144,    64,    77,
    76,    75,    72,   311,   312,   313,   314,   315,   316,    71,
   319,   320,   321,    70,   323,   324,   325,   201,    64,    68,
   329,    67,    66,   333,   334,   335,    65,   256,    64,    62,
   340,   341,   342,    64,    61,    60,    59,   348,   321,   349,
   350,    46,    45,    44,   357,   358,    43,   362,   364,   365,
   366,    40,    31,   370,   371,   372,   192,   194 ]

racc_action_check = [
   287,   214,   256,   180,   137,   211,    27,    26,   140,    87,
    49,   175,   105,   269,   150,   287,   108,   176,   150,   137,
   249,   269,   314,   256,   249,   176,   175,   140,   340,   287,
    27,    87,   180,   137,   184,   108,   166,   314,   270,    26,
   175,    49,    49,   249,   105,    67,   321,   340,   125,   184,
   214,   314,   211,   270,   104,   287,   267,   238,   238,   137,
   125,   125,    67,   184,    67,   321,   175,   270,   110,   287,
   287,   267,   287,   137,   137,   287,   137,   314,   180,   137,
   175,   175,   175,   175,   103,   267,   175,   325,   151,   184,
   176,   314,   314,   270,   314,   139,   112,   314,   111,   151,
   329,   151,   325,   184,   184,   113,   184,   270,   270,   184,
   270,   267,   331,   270,   139,   329,   325,   111,    20,   260,
   341,   114,    25,   259,    20,   267,   267,   331,   267,   329,
   116,   267,   341,   341,   260,   237,   126,   317,   259,   117,
   121,   331,   325,    25,   122,   317,    25,   126,   260,   126,
   237,   271,   259,    25,    25,   329,   325,   325,   123,   325,
   218,   124,   325,   219,   237,   338,   271,   331,   218,   329,
   329,   219,   329,   338,   260,   329,   102,    68,   259,   101,
   271,   331,   331,    68,   331,   235,   128,   331,   260,   260,
   237,   260,   259,   259,   260,   259,   362,   129,   259,   348,
   235,   130,   131,   293,   237,   237,   271,   237,   362,   362,
   237,   348,   348,   132,   235,   293,   293,   363,   133,   220,
   271,   271,   136,   271,   349,   363,   271,   220,     0,     0,
   187,   149,   350,     0,   349,   349,   100,   149,     0,    28,
   235,     0,   350,   350,     0,    28,    99,    18,    18,   187,
    18,    18,    98,   141,   235,   235,   204,   235,   143,   144,
   235,    84,    84,    84,    84,     0,     0,     0,     0,   145,
     2,     2,     2,     0,     2,   204,   187,   187,   187,   187,
   187,   187,   187,   187,   187,   187,   199,   199,   199,   199,
   148,     0,   148,   356,     0,   356,     0,   146,   158,     0,
   158,   147,   204,   204,   204,   204,   204,    55,    55,    55,
    55,    96,    95,    94,    89,   152,   157,    86,   159,   160,
   161,   162,   163,   164,   165,   107,    85,    79,    78,   181,
   182,   183,    77,   185,    76,   189,   191,   192,   193,   194,
   196,    75,   200,   201,   202,    74,   205,   206,   208,   209,
    73,    72,   216,   217,    71,    69,    66,   228,    65,   236,
    64,    63,   243,   244,   245,   246,   247,   248,    59,   255,
    58,   257,   258,    57,    56,   262,   263,   264,   265,    54,
    52,    50,    48,   273,   275,   277,   281,   284,   286,    47,
   288,   290,   292,    44,   295,   296,   302,   304,   305,    43,
   316,    40,    39,   322,   323,   324,    37,   326,    36,    35,
   333,   334,   335,   337,    34,    31,    29,   342,   345,   346,
   347,    24,    23,    22,   351,   355,    21,   357,   358,   359,
   360,    19,     1,   365,   366,   369,   370,   371 ]

racc_action_pointer = [
   226,   432,   268,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   239,   422,
   105,   417,   414,   409,   408,   109,    -6,    -7,   202,   345,
   nil,   415,   nil,   nil,   409,   404,   345,   396,   nil,   393,
   388,   nil,   nil,   386,   380,   nil,   nil,   346,   362,    -3,
   335,   nil,   351,   nil,   336,   241,   361,   360,   327,   355,
   nil,   nil,   nil,   347,   326,   344,   343,    29,   163,   326,
   nil,   341,   306,   307,   325,   307,   321,   319,   315,   314,
   nil,   nil,   nil,   nil,   195,   278,   304,   -11,   nil,   309,
   nil,   nil,   nil,   nil,   296,   289,   288,   nil,   239,   233,
   223,   161,   155,    71,     9,    -1,   nil,   277,   -13,   nil,
    45,    69,    83,    92,   108,   nil,    82,   126,   nil,   nil,
   nil,   127,   110,   124,   140,    29,   114,   nil,   138,   180,
   158,   154,   192,   175,   nil,   nil,   209,    -1,   nil,    66,
   -21,   204,   nil,   235,   246,   206,   276,   272,   257,   202,
   -15,    66,   287,   nil,   nil,   nil,   nil,   294,   265,   295,
   255,   307,   301,   309,   260,   281,    23,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     6,    12,   nil,   nil,   nil,
    -2,   266,   267,   318,    29,   284,   nil,   226,   nil,   263,
   nil,   301,   314,   305,   316,   nil,   311,   nil,   nil,   262,
   281,   330,   295,   nil,   252,   333,   329,   nil,   335,   301,
   nil,   -24,   nil,   nil,   -28,   nil,   273,   274,   139,   142,
   198,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   344,   nil,
   nil,   nil,   nil,   nil,   nil,   180,   339,   130,    -2,   nil,
   nil,   nil,   nil,   304,   343,   341,   331,   343,   333,     7,
   nil,   nil,   nil,   nil,   nil,   306,   -39,   322,   359,   118,
   114,   nil,   354,   328,   329,   315,   nil,    51,   nil,     8,
    33,   146,   nil,   349,   nil,   379,   nil,   305,   nil,   nil,
   nil,   337,   nil,   nil,   327,   nil,   359,    -5,   356,   nil,
   357,   nil,   363,   184,   nil,   381,   378,   nil,   nil,   nil,
   nil,   nil,   347,   nil,   333,   335,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    17,   nil,   380,   116,   nil,   nil,
   nil,    29,   373,   384,   392,    82,   346,   nil,   nil,    95,
   nil,   107,   nil,   381,   398,   392,   nil,   350,   144,   nil,
    11,   101,   404,   nil,   nil,   389,   398,   399,   180,   197,
   205,   395,   nil,   nil,   nil,   405,   260,   414,   415,   406,
   407,   nil,   177,   196,   nil,   399,   400,   nil,   nil,   422,
   401,   404,   nil ]

racc_action_default = [
  -172,  -172,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -172,  -172,
  -172,  -172,  -172,  -172,  -172,  -172,  -172,  -172,  -172,  -172,
  -141,  -172,    -2,    -3,  -172,  -172,  -112,  -172,   -23,  -172,
  -172,   -29,   -30,  -172,  -172,   -67,   -68,  -172,  -172,  -172,
  -172,   -75,   -76,   -77,  -172,  -172,  -172,  -172,  -172,  -172,
   373,    -4,    -5,   -25,  -172,   -25,  -172,  -172,  -172,   -66,
  -170,  -172,  -172,  -172,  -172,  -172,  -172,  -172,  -172,  -172,
  -120,  -121,  -122,  -123,  -172,  -172,  -172,  -172,   -21,  -172,
  -113,   -22,   -24,   -27,  -172,  -172,  -172,   -51,  -172,  -172,
  -172,   -79,  -172,  -172,  -172,  -172,   -78,  -172,  -172,  -124,
  -172,  -172,  -172,  -172,  -172,  -131,   -94,  -172,  -134,  -135,
   -26,  -172,  -172,  -172,  -172,  -172,   -32,  -171,   -81,  -172,
  -172,   -94,  -172,  -172,   -74,  -116,  -172,  -172,  -118,   -94,
   -94,  -127,  -128,  -172,  -172,  -112,  -172,  -136,  -172,  -172,
  -172,  -172,  -172,   -46,   -47,   -48,   -33,   -34,  -172,  -172,
  -114,  -172,  -172,  -172,  -112,  -172,  -172,  -125,  -126,  -142,
  -143,  -144,  -145,  -146,  -147,  -172,  -172,  -158,  -159,  -160,
  -172,  -112,  -112,  -172,  -172,   -95,   -96,  -172,  -132,  -172,
   -28,  -172,  -172,  -172,  -172,   -31,   -42,   -35,   -36,  -172,
  -109,  -172,   -82,   -83,  -172,  -172,   -79,   -71,  -172,   -94,
  -148,  -172,  -150,  -152,  -172,  -154,  -172,  -172,  -172,  -172,
  -172,  -164,  -166,  -168,  -117,  -119,  -129,  -130,  -172,   -88,
   -89,   -90,   -91,   -92,   -93,  -172,  -172,  -172,  -172,  -102,
  -103,  -104,  -105,  -172,  -172,  -172,  -172,  -172,  -172,  -172,
   -37,   -38,   -39,   -40,   -41,  -112,  -172,  -115,  -172,  -172,
  -172,   -87,  -172,   -81,   -94,  -112,  -149,  -172,  -153,  -172,
  -172,  -172,  -161,  -172,  -162,  -172,  -163,  -172,   -97,   -98,
   -99,  -172,  -101,  -107,  -172,  -106,  -133,  -172,  -172,   -52,
  -172,   -53,   -43,  -172,   -54,  -172,  -172,   -69,  -110,  -111,
   -84,   -85,  -172,   -80,  -114,  -112,   -73,  -151,  -155,  -156,
  -157,  -165,  -167,  -169,  -172,  -108,  -172,  -172,  -139,   -49,
   -50,  -172,  -172,  -172,  -172,  -172,  -109,   -72,  -100,  -172,
  -137,  -172,   -55,   -44,  -172,  -172,   -86,  -112,  -172,  -140,
  -172,  -172,  -172,   -70,  -138,   -45,  -172,  -172,  -172,  -172,
  -172,   -59,   -56,   -61,   -62,  -172,   -57,  -172,  -172,  -172,
  -172,   -58,  -172,  -172,   -64,  -172,  -172,   -60,   -63,  -172,
  -172,  -172,   -65 ]

racc_goto_table = [
    63,   152,   168,   145,   200,   160,   128,   255,   203,    69,
   215,    12,    11,   292,    47,    54,    93,   142,   164,   185,
   317,   108,    79,    78,   115,   239,   181,   182,   156,    88,
     1,    91,   352,   356,   363,   332,   361,   347,    73,   250,
   212,   197,   261,   124,   111,    17,   134,   135,    16,   227,
   138,   113,   112,   195,   202,   139,    15,   259,    14,    13,
    10,   278,   338,   235,   280,   282,   240,     9,     8,     7,
   167,   141,     6,   146,   286,     5,   257,   211,   140,   214,
     2,   218,   147,   219,   220,   nil,   226,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   133,   nil,   265,   190,   119,   118,
   279,   nil,   281,   308,   345,   300,   nil,   198,   nil,   188,
   nil,   263,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   301,   302,   nil,   nil,   207,   nil,
   nil,   nil,   307,   337,   nil,   309,   310,   nil,   nil,   nil,
   304,   nil,   nil,   nil,   nil,   224,   225,   nil,   326,   nil,
   nil,   305,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   322,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   328,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   336,   nil,   nil,   nil,   nil,   nil,   339,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   346,   nil,   297,
   nil,   nil,   nil,   nil,   351,   nil,   nil,   nil,   nil,   306,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   367,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   327,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   343 ]

racc_goto_check = [
    16,    23,    42,    36,    34,    33,    32,    35,    40,    30,
    64,    10,     9,    24,    31,    31,    18,    55,    36,    44,
    58,    51,    52,    50,    37,    43,    36,    36,    20,    17,
     1,    17,    27,    27,    29,    26,    25,    28,    31,    22,
    42,    21,    43,    19,    30,    15,    37,    37,    14,    42,
    37,    52,    50,    20,    39,    51,    13,    41,    12,    11,
     8,    45,    58,    46,    47,    48,    49,     7,     6,     5,
    53,    54,     4,    56,    57,     3,    44,    62,    30,    63,
     2,    65,    30,    66,    67,   nil,    55,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    31,   nil,    36,    18,    10,     9,
    42,   nil,    42,    64,    24,    40,   nil,    18,   nil,    16,
   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    42,    42,   nil,   nil,    16,   nil,
   nil,   nil,    42,    35,   nil,    42,    42,   nil,   nil,   nil,
    33,   nil,   nil,   nil,   nil,    16,    16,   nil,    34,   nil,
   nil,    36,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    42,   nil,   nil,   nil,   nil,   nil,    42,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,    16,
   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16 ]

racc_goto_pointer = [
   nil,    30,    80,    75,    72,    69,    68,    67,    60,    12,
    11,    59,    58,    56,    48,    45,   -36,   -34,   -51,   -55,
   -98,  -116,  -160,  -124,  -236,  -320,  -286,  -317,  -305,  -324,
   -35,   -11,   -95,  -123,  -156,  -193,  -113,   -61,   nil,  -107,
  -153,  -147,  -135,  -162,  -125,  -167,  -124,  -172,  -173,  -121,
   -32,   -57,   -33,   -66,   -43,   -97,   -44,  -170,  -267,   nil,
   nil,   nil,   -98,   -97,  -166,   -99,   -97,   -96 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   157,   nil,
   nil,   158,   nil,   nil,   nil,    97,   294,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    52,   nil,
   nil,   nil,   318,   nil,   nil,   186,   nil,   170,   nil,   nil,
   nil,   nil,   nil,   109,   nil,   nil,   nil,   nil,   nil,   169,
   171,   172,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 82, :_reduce_1,
  2, 82, :_reduce_2,
  2, 82, :_reduce_3,
  3, 82, :_reduce_4,
  3, 82, :_reduce_5,
  1, 82, :_reduce_6,
  1, 82, :_reduce_7,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  4, 84, :_reduce_21,
  4, 84, :_reduce_22,
  2, 84, :_reduce_23,
  4, 84, :_reduce_24,
  0, 98, :_reduce_none,
  2, 98, :_reduce_26,
  4, 85, :_reduce_27,
  7, 85, :_reduce_28,
  2, 86, :_reduce_29,
  2, 86, :_reduce_30,
  7, 87, :_reduce_31,
  5, 87, :_reduce_32,
  6, 87, :_reduce_33,
  1, 101, :_reduce_34,
  2, 101, :_reduce_35,
  2, 101, :_reduce_36,
  3, 102, :_reduce_37,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  3, 100, :_reduce_42,
  5, 100, :_reduce_43,
  7, 100, :_reduce_44,
  9, 100, :_reduce_45,
  1, 104, :_reduce_46,
  1, 104, :_reduce_47,
  1, 104, :_reduce_48,
  7, 99, :_reduce_49,
  7, 99, :_reduce_50,
  1, 99, :_reduce_none,
  6, 106, :_reduce_52,
  6, 106, :_reduce_53,
  1, 105, :_reduce_54,
  3, 105, :_reduce_55,
  7, 107, :_reduce_56,
  7, 107, :_reduce_57,
  8, 107, :_reduce_58,
  2, 109, :_reduce_59,
  5, 109, :_reduce_60,
  1, 108, :_reduce_61,
  1, 108, :_reduce_62,
  4, 108, :_reduce_63,
  1, 110, :_reduce_64,
  3, 110, :_reduce_65,
  3, 88, :_reduce_66,
  2, 89, :_reduce_67,
  2, 89, :_reduce_68,
  9, 90, :_reduce_69,
  12, 90, :_reduce_70,
  7, 91, :_reduce_71,
  10, 91, :_reduce_72,
  9, 91, :_reduce_73,
  5, 92, :_reduce_74,
  1, 112, :_reduce_75,
  1, 112, :_reduce_76,
  1, 119, :_reduce_77,
  3, 119, :_reduce_78,
  0, 113, :_reduce_none,
  5, 113, :_reduce_80,
  0, 114, :_reduce_none,
  2, 114, :_reduce_82,
  1, 120, :_reduce_83,
  3, 120, :_reduce_84,
  3, 121, :_reduce_85,
  5, 121, :_reduce_86,
  1, 122, :_reduce_none,
  1, 124, :_reduce_88,
  1, 124, :_reduce_89,
  1, 124, :_reduce_90,
  1, 124, :_reduce_91,
  1, 124, :_reduce_92,
  1, 124, :_reduce_none,
  0, 117, :_reduce_none,
  2, 117, :_reduce_95,
  1, 125, :_reduce_96,
  3, 125, :_reduce_97,
  3, 126, :_reduce_98,
  3, 126, :_reduce_99,
  5, 126, :_reduce_100,
  3, 126, :_reduce_101,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_104,
  1, 130, :_reduce_none,
  2, 130, :_reduce_106,
  1, 129, :_reduce_107,
  2, 129, :_reduce_108,
  0, 116, :_reduce_none,
  2, 116, :_reduce_110,
  2, 116, :_reduce_111,
  0, 97, :_reduce_none,
  2, 97, :_reduce_113,
  0, 115, :_reduce_none,
  2, 115, :_reduce_115,
  5, 93, :_reduce_116,
  7, 93, :_reduce_117,
  5, 93, :_reduce_118,
  7, 93, :_reduce_119,
  1, 131, :_reduce_120,
  1, 131, :_reduce_121,
  1, 133, :_reduce_122,
  1, 133, :_reduce_123,
  1, 132, :_reduce_124,
  3, 132, :_reduce_125,
  3, 134, :_reduce_126,
  2, 118, :_reduce_127,
  1, 135, :_reduce_128,
  3, 135, :_reduce_129,
  3, 136, :_reduce_130,
  4, 94, :_reduce_131,
  6, 94, :_reduce_132,
  8, 95, :_reduce_133,
  4, 95, :_reduce_134,
  4, 95, :_reduce_135,
  1, 137, :_reduce_none,
  3, 138, :_reduce_137,
  5, 138, :_reduce_138,
  1, 139, :_reduce_139,
  3, 139, :_reduce_140,
  1, 96, :_reduce_141,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  2, 141, :_reduce_none,
  3, 141, :_reduce_149,
  1, 143, :_reduce_150,
  3, 143, :_reduce_151,
  2, 142, :_reduce_152,
  3, 142, :_reduce_153,
  1, 144, :_reduce_none,
  3, 144, :_reduce_155,
  3, 145, :_reduce_156,
  3, 145, :_reduce_157,
  1, 140, :_reduce_none,
  1, 140, :_reduce_none,
  1, 140, :_reduce_none,
  3, 128, :_reduce_161,
  3, 128, :_reduce_162,
  3, 128, :_reduce_163,
  1, 146, :_reduce_164,
  3, 146, :_reduce_165,
  1, 147, :_reduce_166,
  3, 147, :_reduce_167,
  1, 148, :_reduce_168,
  3, 148, :_reduce_169,
  1, 111, :_reduce_170,
  3, 111, :_reduce_171 ]

racc_reduce_n = 172

racc_shift_n = 373

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :CHANGE => 16,
  :INDEX => 17,
  :USE => 18,
  :STRING => 19,
  "(" => 20,
  ")" => 21,
  :STREAM => 22,
  :EQ => 23,
  :NEW_IMAGE => 24,
  :OLD_IMAGE => 25,
  :NEW_AND_OLD_IMAGES => 26,
  :KEYS_ONLY => 27,
  :HASH => 28,
  "," => 29,
  :RANGE => 30,
  :NUMBER => 31,
  :BINARY => 32,
  :READ => 33,
  :NUMBER_VALUE => 34,
  :WRITE => 35,
  :GLOBAL => 36,
  :ALL => 37,
  :INCLUDE => 38,
  :DROP => 39,
  :DESCRIBE => 40,
  :DESC => 41,
  :SELECT => 42,
  :FROM => 43,
  :COUNT => 44,
  "*" => 45,
  "/" => 46,
  :GET => 47,
  :WHERE => 48,
  :AND => 49,
  :BETWEEN => 50,
  :LE => 51,
  :LT => 52,
  :GE => 53,
  :BEGINS_WITH => 54,
  :IN => 55,
  :IS => 56,
  :NE => 57,
  :CONTAINS => 58,
  :NOT => 59,
  :NULL => 60,
  :ORDER => 61,
  :ASC => 62,
  :LIMIT => 63,
  :HAVING => 64,
  :UPDATE => 65,
  :SET => 66,
  :ADD => 67,
  :DELETE => 68,
  :DEL => 69,
  :INSERT => 70,
  :INTO => 71,
  :VALUES => 72,
  :NEXT => 73,
  :BOOL => 74,
  "[" => 75,
  "]" => 76,
  "{" => 77,
  "}" => 78,
  ":" => 79,
  :BINARY_VALUE => 80 }

racc_nt_base = 81

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "CHANGE",
  "INDEX",
  "USE",
  "STRING",
  "\"(\"",
  "\")\"",
  "STREAM",
  "EQ",
  "NEW_IMAGE",
  "OLD_IMAGE",
  "NEW_AND_OLD_IMAGES",
  "KEYS_ONLY",
  "HASH",
  "\",\"",
  "RANGE",
  "NUMBER",
  "BINARY",
  "READ",
  "NUMBER_VALUE",
  "WRITE",
  "GLOBAL",
  "ALL",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "DEL",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "BOOL",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\":\"",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "capacity_clause",
  "create_definition",
  "capacity_stream_clause",
  "stream_clause",
  "stream_view_type",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "delete_or_del",
  "attr_to_update",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "list",
  "map",
  "list_items",
  "map_items",
  "map_item",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_27(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 76)
  def _reduce_28(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => val[5], :capacity => val[6])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 81)
  def _reduce_29(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 86)
  def _reduce_30(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 91)
  def _reduce_31(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6][:capacity], :stream => val[6][:stream]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 95)
  def _reduce_32(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil, :stream => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 99)
  def _reduce_33(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5][:capacity], :stream => val[5][:stream])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 104)
  def _reduce_34(val, _values)
                                {:capacity => val[0], :stream => nil}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 108)
  def _reduce_35(val, _values)
                                {:capacity => val[0], :stream => val[1]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 112)
  def _reduce_36(val, _values)
                                {:capacity => val[1], :stream => val[0]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 117)
  def _reduce_37(val, _values)
                        val[2]
                  
  end
.,.,

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 127)
  def _reduce_42(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 131)
  def _reduce_43(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => val[4]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 135)
  def _reduce_44(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 139)
  def _reduce_45(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 144)
  def _reduce_46(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 148)
  def _reduce_47(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 152)
  def _reduce_48(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 157)
  def _reduce_49(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 161)
  def _reduce_50(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 167)
  def _reduce_52(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 171)
  def _reduce_53(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 176)
  def _reduce_54(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 180)
  def _reduce_55(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 185)
  def _reduce_56(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 189)
  def _reduce_57(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 193)
  def _reduce_58(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 198)
  def _reduce_59(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 202)
  def _reduce_60(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 210)
  def _reduce_61(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 214)
  def _reduce_62(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 218)
  def _reduce_63(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 223)
  def _reduce_64(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 227)
  def _reduce_65(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 232)
  def _reduce_66(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 237)
  def _reduce_67(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 241)
  def _reduce_68(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 246)
  def _reduce_69(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 250)
  def _reduce_70(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 255)
  def _reduce_71(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 259)
  def _reduce_72(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 263)
  def _reduce_73(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 268)
  def _reduce_74(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 273)
  def _reduce_75(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 277)
  def _reduce_76(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 282)
  def _reduce_77(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 286)
  def _reduce_78(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 79 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 292)
  def _reduce_80(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 298)
  def _reduce_82(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 303)
  def _reduce_83(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 307)
  def _reduce_84(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 312)
  def _reduce_85(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 316)
  def _reduce_86(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 87 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 323)
  def _reduce_88(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 327)
  def _reduce_89(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 331)
  def _reduce_90(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 335)
  def _reduce_91(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 339)
  def _reduce_92(val, _values)
                          :GT
                    
  end
.,.,

# reduce 93 omitted

# reduce 94 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 346)
  def _reduce_95(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 351)
  def _reduce_96(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 355)
  def _reduce_97(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 360)
  def _reduce_98(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 364)
  def _reduce_99(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 368)
  def _reduce_100(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 372)
  def _reduce_101(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 102 omitted

# reduce 103 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 378)
  def _reduce_104(val, _values)
                      :NE
                
  end
.,.,

# reduce 105 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 384)
  def _reduce_106(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 388)
  def _reduce_107(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 392)
  def _reduce_108(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 109 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 398)
  def _reduce_110(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 402)
  def _reduce_111(val, _values)
                       false
                 
  end
.,.,

# reduce 112 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 408)
  def _reduce_113(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 114 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 414)
  def _reduce_115(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 419)
  def _reduce_116(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 423)
  def _reduce_117(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 427)
  def _reduce_118(val, _values)
                      attrs = {}
                  val[3].each {|i| attrs[i] = true }
                  struct(:UPDATE, :table => val[1], :action => val[2], :attrs => attrs, :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 433)
  def _reduce_119(val, _values)
                      attrs = {}
                  val[4].each {|i| attrs[i] = true }
                  struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => attrs, :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 440)
  def _reduce_120(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 444)
  def _reduce_121(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 449)
  def _reduce_122(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 453)
  def _reduce_123(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 458)
  def _reduce_124(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 462)
  def _reduce_125(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 467)
  def _reduce_126(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 472)
  def _reduce_127(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 477)
  def _reduce_128(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 481)
  def _reduce_129(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 486)
  def _reduce_130(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 491)
  def _reduce_131(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 495)
  def _reduce_132(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 500)
  def _reduce_133(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 504)
  def _reduce_134(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 508)
  def _reduce_135(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 136 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 515)
  def _reduce_137(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 519)
  def _reduce_138(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 524)
  def _reduce_139(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 528)
  def _reduce_140(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 533)
  def _reduce_141(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 546)
  def _reduce_149(val, _values)
               val[1]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 551)
  def _reduce_150(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 555)
  def _reduce_151(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 560)
  def _reduce_152(val, _values)
              {}
        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 564)
  def _reduce_153(val, _values)
              val[1]
        
  end
.,.,

# reduce 154 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 570)
  def _reduce_155(val, _values)
                    val[0].merge(val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 575)
  def _reduce_156(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 579)
  def _reduce_157(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 588)
  def _reduce_161(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 592)
  def _reduce_162(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 596)
  def _reduce_163(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 601)
  def _reduce_164(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 605)
  def _reduce_165(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 610)
  def _reduce_166(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 614)
  def _reduce_167(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 619)
  def _reduce_168(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 623)
  def _reduce_169(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 628)
  def _reduce_170(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 632)
  def _reduce_171(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
