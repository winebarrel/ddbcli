#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'
require 'set'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 664)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CHANGE
  CREATE
  CONTAINS
  COUNT
  DELETE
  DEL
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEW_AND_OLD_IMAGES
  NEW_IMAGE
  NEXT
  NOT
  NUMBER
  OLD_IMAGE
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STREAM
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.check KEYWORD_REGEXP) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan KEYWORD_REGEXP
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.check /NULL/i) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan /NULL/i
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/\[\]\{\}:]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_]*|i)
      if ['true', 'false'].include?(tok)
        yield [:BOOL, 'true' == tok]
      else
        yield [:IDENTIFIER, tok]
      end
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
   188,   188,   274,   304,   119,   232,   272,   188,    55,    53,
   218,   201,    53,   188,    53,   190,   190,   202,    53,   183,
   183,   227,   190,   116,   303,   188,   183,    25,   190,   226,
   187,   187,   183,    56,   188,   231,    50,   187,   300,    49,
   190,    74,    51,   187,   183,    51,    48,    51,   300,   190,
   273,    51,   271,   183,   101,   187,   184,   184,   301,   227,
   100,   136,   298,   184,   187,   277,   300,   226,   301,   184,
   185,   185,   186,   186,   278,   189,   189,   185,   220,   186,
   233,   184,   189,   185,   188,   186,   301,   142,   189,   335,
   184,   102,   188,   188,   223,   185,   243,   186,   336,   190,
   189,   188,   188,   183,   185,   141,   186,   190,   190,   189,
   116,   183,   183,   164,   187,   239,   190,   190,   135,    95,
   183,   183,   187,   187,   116,    96,   165,   166,   164,   349,
   112,   187,   187,   141,   102,    70,   188,    97,   336,    98,
   184,   165,   166,   265,   240,   241,   242,   244,   184,   184,
   148,   190,   149,   149,   185,   183,   186,   184,   184,   189,
   188,   149,   185,   185,   186,   186,   187,   189,   189,   188,
   188,   185,   185,   186,   186,   190,   189,   189,    70,   183,
    41,    96,    96,   153,   190,   190,    42,   359,   183,   183,
   187,   164,   184,    97,    97,    98,    98,   358,   360,   187,
   187,   164,   359,    58,   165,   166,   185,   164,   186,    57,
   134,   189,   358,   360,   165,   166,   184,   160,     3,     4,
   165,   166,   161,    18,   243,   184,   184,   279,    21,   281,
   185,    19,   186,   162,    20,   189,   280,   373,   282,   185,
   185,   186,   186,   239,   189,   189,   374,    36,    37,   203,
    38,    39,    97,   204,    98,   132,    22,    23,    24,    25,
    80,    81,    82,    83,    26,   154,   156,   157,   158,   159,
   131,   247,   240,   241,   242,   244,   246,   248,   251,   252,
   253,    97,    27,    98,    97,    28,    98,    29,   289,   288,
    30,    32,    33,    34,   171,    35,    80,    81,    82,    83,
   364,    97,   365,    98,   172,   173,   149,   175,   176,   112,
   130,   128,   127,   193,   194,   197,    64,   199,   102,   126,
   125,    96,   122,   207,   118,    96,   211,   214,   215,   216,
    64,   137,   219,   116,    70,   112,    64,    64,   148,   109,
   238,   108,   254,   255,   256,   257,   258,   107,   259,   261,
   197,   263,   106,   267,   134,   269,   149,   105,   104,   275,
   276,   103,   102,    92,   197,    89,   190,    90,    89,   290,
   292,   293,   294,   295,   296,    87,    64,    86,   238,   214,
    85,    84,   308,   171,   149,    64,    77,    76,    75,    72,
   316,   317,   318,   319,   320,   321,    71,   324,   325,   326,
    70,   328,   329,   330,   211,    64,    68,   334,    67,    66,
   338,   339,   340,    65,   261,    64,    62,   345,   346,   347,
    64,    61,    60,    59,   353,   326,   354,   355,    46,    45,
    44,   362,   363,    43,   367,   369,   370,   371,    40,    31,
   375,   376,   377,   202,   204 ]

racc_action_check = [
   292,   142,   224,   261,    87,   190,   221,   185,    27,    49,
   175,   160,    26,   319,    25,   292,   142,   160,   107,   292,
   142,   186,   185,   109,   261,   194,   185,    87,   319,   186,
   292,   142,   319,    27,   275,   190,    25,   185,   326,    25,
   194,    49,    49,   319,   194,    26,    25,    25,   345,   275,
   224,   107,   221,   275,    68,   194,   292,   142,   326,   274,
    68,   105,   259,   185,   275,   228,   259,   274,   345,   319,
   292,   142,   292,   142,   228,   292,   142,   185,   185,   185,
   190,   194,   185,   319,   272,   319,   259,   112,   319,   322,
   275,   113,   330,   334,   186,   194,   214,   194,   322,   272,
   194,   336,   265,   272,   275,   110,   275,   330,   334,   275,
   113,   330,   334,   346,   272,   214,   336,   265,   104,    67,
   336,   265,   330,   334,   110,    67,   346,   346,   130,   343,
   114,   336,   265,   144,   145,   115,   264,    67,   343,    67,
   272,   130,   130,   214,   214,   214,   214,   214,   330,   334,
   116,   264,   144,   145,   272,   264,   272,   336,   265,   272,
   247,   118,   330,   334,   330,   334,   264,   330,   334,   276,
   245,   336,   265,   336,   265,   247,   336,   265,   119,   247,
    20,   162,   131,   125,   276,   245,    20,   354,   276,   245,
   247,   367,   264,   162,   131,   162,   131,   354,   354,   276,
   245,   353,   355,    28,   367,   367,   264,   298,   264,    28,
   103,   264,   355,   355,   353,   353,   247,   127,     0,     0,
   298,   298,   128,     0,   197,   276,   245,   229,     0,   230,
   247,     0,   247,   129,     0,   247,   229,   368,   230,   276,
   245,   276,   245,   197,   276,   245,   368,    18,    18,   161,
    18,    18,    94,   161,    94,   102,     0,     0,     0,     0,
    84,    84,    84,    84,     0,   126,   126,   126,   126,   126,
   101,   197,   197,   197,   197,   197,   197,   197,   197,   197,
   197,   153,     0,   153,   206,     0,   206,     0,   248,   248,
     0,     2,     2,     2,   133,     2,    55,    55,    55,    55,
   361,   167,   361,   167,   134,   135,   136,   137,   138,   141,
   100,    98,    97,   146,   148,   149,   150,   151,   152,    96,
    95,    93,    89,   163,    86,   169,   170,   171,   172,   173,
   174,   106,   176,    85,    79,    78,   191,   192,   193,    77,
   195,    76,   199,   201,   202,   203,   204,    75,   207,   210,
   211,   212,    74,   215,   216,   218,   219,    73,    72,   226,
   227,    71,    69,    66,   238,    65,   246,    64,    63,   253,
   254,   255,   256,   257,   258,    59,   260,    58,   262,   263,
    57,    56,   267,   268,   269,   270,    54,    52,    50,    48,
   278,   280,   282,   286,   289,   291,    47,   293,   295,   297,
    44,   300,   301,   307,   309,   310,    43,   321,    40,    39,
   327,   328,   329,    37,   331,    36,    35,   338,   339,   340,
   342,    34,    31,    29,   347,   350,   351,   352,    24,    23,
    22,   356,   360,    21,   362,   363,   364,   365,    19,     1,
   370,   371,   374,   375,   376 ]

racc_action_pointer = [
   216,   439,   289,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   239,   429,
   167,   424,   421,   416,   415,     1,    -1,    -5,   165,   351,
   nil,   422,   nil,   nil,   416,   411,   351,   403,   nil,   400,
   395,   nil,   nil,   393,   387,   nil,   nil,   352,   369,    -4,
   341,   nil,   357,   nil,   342,   229,   368,   367,   333,   362,
   nil,   nil,   nil,   354,   332,   351,   350,   103,    40,   332,
   nil,   348,   312,   313,   332,   312,   328,   326,   322,   321,
   nil,   nil,   nil,   nil,   193,   284,   311,   -16,   nil,   317,
   nil,   nil,   nil,   299,   218,   303,   296,   289,   288,   nil,
   297,   257,   242,   192,    97,    48,   285,     5,   nil,   -26,
    75,   nil,    64,    61,   117,   122,   137,   nil,   112,   165,
   nil,   nil,   nil,   nil,   nil,   170,   241,   182,   187,   212,
   109,   160,   nil,   245,   287,   261,   257,   286,   264,   nil,
   nil,   296,    -4,   nil,   103,   104,   263,   nil,   291,   302,
   252,   296,   288,   247,   nil,   nil,   nil,   nil,   nil,   nil,
   -19,   219,   159,   294,   nil,   nil,   nil,   267,   nil,   303,
   261,   314,   308,   316,   266,   -34,   319,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,    16,   nil,   nil,   nil,
     0,   272,   273,   325,    20,   290,   nil,   220,   nil,   269,
   nil,   307,   321,   311,   323,   nil,   250,   318,   nil,   nil,
   287,   337,   301,   nil,    92,   340,   336,   nil,   342,   307,
   nil,   -24,   nil,   nil,   -28,   nil,   280,   281,    44,   206,
   208,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   351,   nil,
   nil,   nil,   nil,   nil,   nil,   165,   346,   155,   228,   nil,
   nil,   nil,   nil,   310,   350,   348,   337,   350,   339,    49,
   312,   -39,   328,   366,   131,    97,   nil,   361,   334,   335,
   321,   nil,    79,   nil,    54,    29,   164,   nil,   355,   nil,
   386,   nil,   312,   nil,   nil,   nil,   343,   nil,   nil,   333,
   nil,   365,    -5,   362,   nil,   363,   nil,   369,   188,   nil,
   388,   385,   nil,   nil,   nil,   nil,   nil,   353,   nil,   339,
   341,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8,
   nil,   387,    68,   nil,   nil,   nil,    21,   379,   391,   399,
    87,   352,   nil,   nil,    88,   nil,    96,   nil,   387,   405,
   399,   nil,   356,   108,   nil,    31,    94,   411,   nil,   nil,
   395,   405,   406,   182,   159,   174,   401,   nil,   nil,   nil,
   412,   266,   421,   422,   413,   414,   nil,   172,   216,   nil,
   405,   406,   nil,   nil,   429,   407,   410,   nil ]

racc_action_default = [
  -177,  -177,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -177,  -177,
  -177,  -177,  -177,  -177,  -177,  -177,  -177,  -177,  -177,  -177,
  -146,  -177,    -2,    -3,  -177,  -177,  -117,  -177,   -23,  -177,
  -177,   -32,   -33,  -177,  -177,   -72,   -73,  -177,  -177,  -177,
  -177,   -80,   -81,   -82,  -177,  -177,  -177,  -177,  -177,  -177,
   378,    -4,    -5,   -25,  -177,   -25,  -177,  -177,  -177,   -71,
  -175,  -177,  -177,  -177,  -177,  -177,  -177,  -177,  -177,  -177,
  -125,  -126,  -127,  -128,  -177,  -177,  -177,  -177,   -21,  -177,
  -118,   -22,   -24,   -27,   -28,  -177,  -177,  -177,  -177,   -56,
  -177,  -177,  -177,   -84,  -177,  -177,  -177,  -177,   -83,  -177,
  -177,  -129,  -177,  -177,  -177,  -177,  -177,  -136,   -99,  -177,
  -139,  -140,   -26,   -29,   -30,  -177,  -177,  -177,  -177,  -177,
  -177,   -35,  -176,   -86,  -177,  -177,   -99,  -177,  -177,   -79,
  -121,  -177,  -177,  -123,   -99,   -99,  -132,  -133,  -177,  -177,
  -117,  -177,  -141,  -177,   -41,   -42,   -43,   -44,   -45,   -46,
  -177,  -177,  -177,  -177,   -51,   -52,   -53,   -36,   -37,   -38,
  -119,  -177,  -177,  -177,  -117,  -177,  -177,  -130,  -131,  -147,
  -148,  -149,  -150,  -151,  -152,  -177,  -177,  -163,  -164,  -165,
  -177,  -117,  -117,  -177,  -177,  -100,  -101,  -177,  -137,  -177,
   -31,  -177,  -177,  -177,  -177,   -34,  -177,   -47,   -40,   -39,
  -114,  -177,   -87,   -88,  -177,  -177,   -84,   -76,  -177,   -99,
  -153,  -177,  -155,  -157,  -177,  -159,  -177,  -177,  -177,  -177,
  -177,  -169,  -171,  -173,  -122,  -124,  -134,  -135,  -177,   -93,
   -94,   -95,   -96,   -97,   -98,  -177,  -177,  -177,  -177,  -107,
  -108,  -109,  -110,  -177,  -177,  -177,  -177,  -177,  -177,  -177,
  -117,  -177,  -120,  -177,  -177,  -177,   -92,  -177,   -86,   -99,
  -117,  -154,  -177,  -158,  -177,  -177,  -177,  -166,  -177,  -167,
  -177,  -168,  -177,  -102,  -103,  -104,  -177,  -106,  -112,  -177,
  -111,  -138,  -177,  -177,   -57,  -177,   -58,   -48,  -177,   -59,
  -177,  -177,   -74,  -115,  -116,   -89,   -90,  -177,   -85,  -119,
  -117,   -78,  -156,  -160,  -161,  -162,  -170,  -172,  -174,  -177,
  -113,  -177,  -177,  -144,   -54,   -55,  -177,  -177,  -177,  -177,
  -177,  -114,   -77,  -105,  -177,  -142,  -177,   -60,   -49,  -177,
  -177,   -91,  -117,  -177,  -145,  -177,  -177,  -177,   -75,  -143,
   -50,  -177,  -177,  -177,  -177,  -177,   -64,   -61,   -66,   -67,
  -177,   -62,  -177,  -177,  -177,  -177,   -63,  -177,  -177,   -69,
  -177,  -177,   -65,   -68,  -177,  -177,  -177,   -70 ]

racc_goto_table = [
    63,   178,   163,   210,   170,   260,   150,   133,    93,   213,
    94,   225,   297,    12,   147,    11,   195,    69,   322,   110,
   168,    47,    54,   249,   174,    79,    88,    78,    91,   357,
   361,     1,   191,   192,   117,   124,   123,   352,   337,   368,
   266,   366,   155,   129,   222,    73,    17,    16,   212,    15,
   264,   205,   113,   237,   115,   144,   114,    14,   139,   140,
   343,    13,   143,    10,   283,   245,   285,   287,   250,     9,
     8,     7,   177,   146,   167,     6,   151,   291,   262,     5,
   221,   224,     2,   228,   229,   230,   nil,   nil,   145,   nil,
   nil,   236,   152,   nil,   200,   nil,   nil,   nil,   350,   313,
   121,   305,   120,   138,   284,   206,   286,   270,   208,   nil,
   nil,   nil,   209,   nil,   198,   nil,   nil,   nil,   nil,   nil,
   268,   nil,   nil,   306,   307,   nil,   342,   nil,   nil,   nil,
   nil,   312,   nil,   nil,   314,   315,   nil,   nil,   217,   309,
   nil,   nil,   331,   nil,   nil,   nil,   nil,   208,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   234,   235,   310,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   327,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   333,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   341,
   nil,   nil,   nil,   nil,   nil,   344,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   351,   nil,
   nil,   nil,   nil,   nil,   302,   356,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   311,   nil,   nil,   nil,   nil,   372,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   332,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   348 ]

racc_goto_check = [
    16,    42,    23,    34,    33,    35,    36,    32,    18,    40,
    19,    64,    24,    10,    55,     9,    44,    30,    58,    51,
    21,    31,    31,    43,    36,    52,    17,    50,    17,    27,
    27,     1,    36,    36,    37,    18,    19,    28,    26,    29,
    43,    25,    22,    20,    42,    31,    15,    14,    39,    13,
    41,    21,    30,    42,    52,    51,    50,    12,    37,    37,
    58,    11,    37,     8,    45,    46,    47,    48,    49,     7,
     6,     5,    53,    54,    19,     4,    56,    57,    44,     3,
    62,    63,     2,    65,    66,    67,   nil,   nil,    30,   nil,
   nil,    55,    30,   nil,    18,   nil,   nil,   nil,    24,    64,
    10,    40,     9,    31,    42,    19,    42,    36,    18,   nil,
   nil,   nil,    19,   nil,    16,   nil,   nil,   nil,   nil,   nil,
    32,   nil,   nil,    42,    42,   nil,    35,   nil,   nil,   nil,
   nil,    42,   nil,   nil,    42,    42,   nil,   nil,    16,    33,
   nil,   nil,    34,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,    16,    36,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,
   nil,   nil,   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,
   nil,   nil,   nil,   nil,    16,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    31,    82,    79,    75,    71,    70,    69,    63,    15,
    13,    61,    57,    49,    47,    46,   -36,   -37,   -59,   -57,
   -57,  -111,   -84,  -128,  -247,  -320,  -288,  -325,  -310,  -324,
   -27,    -4,   -96,  -129,  -167,  -205,  -112,   -51,   nil,  -123,
  -162,  -164,  -141,  -174,  -133,  -174,  -132,  -180,  -181,  -129,
   -28,   -59,   -30,   -69,   -43,  -102,   -43,  -177,  -274,   nil,
   nil,   nil,  -105,  -105,  -175,  -107,  -106,  -105 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   169,   nil,
   nil,   nil,   nil,   nil,   nil,    99,   299,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    52,   nil,
   nil,   nil,   323,   nil,   nil,   196,   nil,   180,   nil,   nil,
   nil,   nil,   nil,   111,   nil,   nil,   nil,   nil,   nil,   179,
   181,   182,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 82, :_reduce_1,
  2, 82, :_reduce_2,
  2, 82, :_reduce_3,
  3, 82, :_reduce_4,
  3, 82, :_reduce_5,
  1, 82, :_reduce_6,
  1, 82, :_reduce_7,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  4, 84, :_reduce_21,
  4, 84, :_reduce_22,
  2, 84, :_reduce_23,
  4, 84, :_reduce_24,
  0, 98, :_reduce_none,
  2, 98, :_reduce_26,
  4, 85, :_reduce_27,
  4, 85, :_reduce_28,
  5, 85, :_reduce_29,
  5, 85, :_reduce_30,
  7, 85, :_reduce_31,
  2, 86, :_reduce_32,
  2, 86, :_reduce_33,
  7, 87, :_reduce_34,
  5, 87, :_reduce_35,
  6, 87, :_reduce_36,
  6, 87, :_reduce_37,
  1, 102, :_reduce_38,
  2, 102, :_reduce_39,
  2, 102, :_reduce_40,
  3, 100, :_reduce_41,
  3, 100, :_reduce_42,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  3, 101, :_reduce_47,
  5, 101, :_reduce_48,
  7, 101, :_reduce_49,
  9, 101, :_reduce_50,
  1, 104, :_reduce_51,
  1, 104, :_reduce_52,
  1, 104, :_reduce_53,
  7, 99, :_reduce_54,
  7, 99, :_reduce_55,
  1, 99, :_reduce_none,
  6, 106, :_reduce_57,
  6, 106, :_reduce_58,
  1, 105, :_reduce_59,
  3, 105, :_reduce_60,
  7, 107, :_reduce_61,
  7, 107, :_reduce_62,
  8, 107, :_reduce_63,
  2, 109, :_reduce_64,
  5, 109, :_reduce_65,
  1, 108, :_reduce_66,
  1, 108, :_reduce_67,
  4, 108, :_reduce_68,
  1, 110, :_reduce_69,
  3, 110, :_reduce_70,
  3, 88, :_reduce_71,
  2, 89, :_reduce_72,
  2, 89, :_reduce_73,
  9, 90, :_reduce_74,
  12, 90, :_reduce_75,
  7, 91, :_reduce_76,
  10, 91, :_reduce_77,
  9, 91, :_reduce_78,
  5, 92, :_reduce_79,
  1, 112, :_reduce_80,
  1, 112, :_reduce_81,
  1, 119, :_reduce_82,
  3, 119, :_reduce_83,
  0, 113, :_reduce_none,
  5, 113, :_reduce_85,
  0, 114, :_reduce_none,
  2, 114, :_reduce_87,
  1, 120, :_reduce_88,
  3, 120, :_reduce_89,
  3, 121, :_reduce_90,
  5, 121, :_reduce_91,
  1, 122, :_reduce_none,
  1, 124, :_reduce_93,
  1, 124, :_reduce_94,
  1, 124, :_reduce_95,
  1, 124, :_reduce_96,
  1, 124, :_reduce_97,
  1, 124, :_reduce_none,
  0, 117, :_reduce_none,
  2, 117, :_reduce_100,
  1, 125, :_reduce_101,
  3, 125, :_reduce_102,
  3, 126, :_reduce_103,
  3, 126, :_reduce_104,
  5, 126, :_reduce_105,
  3, 126, :_reduce_106,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_109,
  1, 130, :_reduce_none,
  2, 130, :_reduce_111,
  1, 129, :_reduce_112,
  2, 129, :_reduce_113,
  0, 116, :_reduce_none,
  2, 116, :_reduce_115,
  2, 116, :_reduce_116,
  0, 97, :_reduce_none,
  2, 97, :_reduce_118,
  0, 115, :_reduce_none,
  2, 115, :_reduce_120,
  5, 93, :_reduce_121,
  7, 93, :_reduce_122,
  5, 93, :_reduce_123,
  7, 93, :_reduce_124,
  1, 131, :_reduce_125,
  1, 131, :_reduce_126,
  1, 133, :_reduce_127,
  1, 133, :_reduce_128,
  1, 132, :_reduce_129,
  3, 132, :_reduce_130,
  3, 134, :_reduce_131,
  2, 118, :_reduce_132,
  1, 135, :_reduce_133,
  3, 135, :_reduce_134,
  3, 136, :_reduce_135,
  4, 94, :_reduce_136,
  6, 94, :_reduce_137,
  8, 95, :_reduce_138,
  4, 95, :_reduce_139,
  4, 95, :_reduce_140,
  1, 137, :_reduce_none,
  3, 138, :_reduce_142,
  5, 138, :_reduce_143,
  1, 139, :_reduce_144,
  3, 139, :_reduce_145,
  1, 96, :_reduce_146,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  2, 141, :_reduce_none,
  3, 141, :_reduce_154,
  1, 143, :_reduce_155,
  3, 143, :_reduce_156,
  2, 142, :_reduce_157,
  3, 142, :_reduce_158,
  1, 144, :_reduce_none,
  3, 144, :_reduce_160,
  3, 145, :_reduce_161,
  3, 145, :_reduce_162,
  1, 140, :_reduce_none,
  1, 140, :_reduce_none,
  1, 140, :_reduce_none,
  3, 128, :_reduce_166,
  3, 128, :_reduce_167,
  3, 128, :_reduce_168,
  1, 146, :_reduce_169,
  3, 146, :_reduce_170,
  1, 147, :_reduce_171,
  3, 147, :_reduce_172,
  1, 148, :_reduce_173,
  3, 148, :_reduce_174,
  1, 111, :_reduce_175,
  3, 111, :_reduce_176 ]

racc_reduce_n = 177

racc_shift_n = 378

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :CHANGE => 16,
  :INDEX => 17,
  :USE => 18,
  :STRING => 19,
  "(" => 20,
  ")" => 21,
  :STREAM => 22,
  :EQ => 23,
  :BOOL => 24,
  :NEW_IMAGE => 25,
  :OLD_IMAGE => 26,
  :NEW_AND_OLD_IMAGES => 27,
  :KEYS_ONLY => 28,
  :HASH => 29,
  "," => 30,
  :RANGE => 31,
  :NUMBER => 32,
  :BINARY => 33,
  :READ => 34,
  :NUMBER_VALUE => 35,
  :WRITE => 36,
  :GLOBAL => 37,
  :ALL => 38,
  :INCLUDE => 39,
  :DROP => 40,
  :DESCRIBE => 41,
  :DESC => 42,
  :SELECT => 43,
  :FROM => 44,
  :COUNT => 45,
  "*" => 46,
  "/" => 47,
  :GET => 48,
  :WHERE => 49,
  :AND => 50,
  :BETWEEN => 51,
  :LE => 52,
  :LT => 53,
  :GE => 54,
  :BEGINS_WITH => 55,
  :IN => 56,
  :IS => 57,
  :NE => 58,
  :CONTAINS => 59,
  :NOT => 60,
  :NULL => 61,
  :ORDER => 62,
  :ASC => 63,
  :LIMIT => 64,
  :HAVING => 65,
  :UPDATE => 66,
  :SET => 67,
  :ADD => 68,
  :DELETE => 69,
  :DEL => 70,
  :INSERT => 71,
  :INTO => 72,
  :VALUES => 73,
  :NEXT => 74,
  "[" => 75,
  "]" => 76,
  "{" => 77,
  "}" => 78,
  ":" => 79,
  :BINARY_VALUE => 80 }

racc_nt_base = 81

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "CHANGE",
  "INDEX",
  "USE",
  "STRING",
  "\"(\"",
  "\")\"",
  "STREAM",
  "EQ",
  "BOOL",
  "NEW_IMAGE",
  "OLD_IMAGE",
  "NEW_AND_OLD_IMAGES",
  "KEYS_ONLY",
  "HASH",
  "\",\"",
  "RANGE",
  "NUMBER",
  "BINARY",
  "READ",
  "NUMBER_VALUE",
  "WRITE",
  "GLOBAL",
  "ALL",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "DEL",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\":\"",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "capacity_clause",
  "stream_clause",
  "create_definition",
  "capacity_stream_clause",
  "stream_view_type",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "delete_or_del",
  "attr_to_update",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "list",
  "map",
  "list_items",
  "map_items",
  "map_item",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_27(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3], :stream => nil)
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 75)
  def _reduce_28(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => nil, :stream => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 79)
  def _reduce_29(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3], :stream => val[4])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 83)
  def _reduce_30(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[4], :stream => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 87)
  def _reduce_31(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => val[5], :capacity => val[6])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 92)
  def _reduce_32(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 97)
  def _reduce_33(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 102)
  def _reduce_34(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6][:capacity], :stream => val[6][:stream]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 106)
  def _reduce_35(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil, :stream => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 110)
  def _reduce_36(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil, :stream => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 114)
  def _reduce_37(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5][:capacity], :stream => val[5][:stream])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 119)
  def _reduce_38(val, _values)
                                {:capacity => val[0], :stream => nil}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 123)
  def _reduce_39(val, _values)
                                {:capacity => val[0], :stream => val[1]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 127)
  def _reduce_40(val, _values)
                                {:capacity => val[1], :stream => val[0]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 132)
  def _reduce_41(val, _values)
                        val[2]
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 136)
  def _reduce_42(val, _values)
                        val[2]
                  
  end
.,.,

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 146)
  def _reduce_47(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 150)
  def _reduce_48(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => val[4]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 154)
  def _reduce_49(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 158)
  def _reduce_50(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 163)
  def _reduce_51(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 167)
  def _reduce_52(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 171)
  def _reduce_53(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 176)
  def _reduce_54(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 180)
  def _reduce_55(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 186)
  def _reduce_57(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 190)
  def _reduce_58(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 195)
  def _reduce_59(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 199)
  def _reduce_60(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 204)
  def _reduce_61(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 208)
  def _reduce_62(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 212)
  def _reduce_63(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 217)
  def _reduce_64(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 221)
  def _reduce_65(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 229)
  def _reduce_66(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 233)
  def _reduce_67(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 237)
  def _reduce_68(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 242)
  def _reduce_69(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 246)
  def _reduce_70(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 251)
  def _reduce_71(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 256)
  def _reduce_72(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 260)
  def _reduce_73(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 265)
  def _reduce_74(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 269)
  def _reduce_75(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 274)
  def _reduce_76(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 278)
  def _reduce_77(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 282)
  def _reduce_78(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 287)
  def _reduce_79(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 292)
  def _reduce_80(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 296)
  def _reduce_81(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 301)
  def _reduce_82(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 305)
  def _reduce_83(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 84 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 311)
  def _reduce_85(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 86 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 317)
  def _reduce_87(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 322)
  def _reduce_88(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 326)
  def _reduce_89(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 331)
  def _reduce_90(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 335)
  def _reduce_91(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 92 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 342)
  def _reduce_93(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 346)
  def _reduce_94(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 350)
  def _reduce_95(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 354)
  def _reduce_96(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 358)
  def _reduce_97(val, _values)
                          :GT
                    
  end
.,.,

# reduce 98 omitted

# reduce 99 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 365)
  def _reduce_100(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 370)
  def _reduce_101(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 374)
  def _reduce_102(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 379)
  def _reduce_103(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 383)
  def _reduce_104(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 387)
  def _reduce_105(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 391)
  def _reduce_106(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 397)
  def _reduce_109(val, _values)
                      :NE
                
  end
.,.,

# reduce 110 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 403)
  def _reduce_111(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 407)
  def _reduce_112(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 411)
  def _reduce_113(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 114 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 417)
  def _reduce_115(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 421)
  def _reduce_116(val, _values)
                       false
                 
  end
.,.,

# reduce 117 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 427)
  def _reduce_118(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 119 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 433)
  def _reduce_120(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 438)
  def _reduce_121(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 442)
  def _reduce_122(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 446)
  def _reduce_123(val, _values)
                      attrs = {}
                  val[3].each {|i| attrs[i] = true }
                  struct(:UPDATE, :table => val[1], :action => val[2], :attrs => attrs, :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 452)
  def _reduce_124(val, _values)
                      attrs = {}
                  val[4].each {|i| attrs[i] = true }
                  struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => attrs, :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 459)
  def _reduce_125(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 463)
  def _reduce_126(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 468)
  def _reduce_127(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 472)
  def _reduce_128(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 477)
  def _reduce_129(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 481)
  def _reduce_130(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 486)
  def _reduce_131(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 491)
  def _reduce_132(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 496)
  def _reduce_133(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 500)
  def _reduce_134(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 505)
  def _reduce_135(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 510)
  def _reduce_136(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 514)
  def _reduce_137(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 519)
  def _reduce_138(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 523)
  def _reduce_139(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 527)
  def _reduce_140(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 141 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 534)
  def _reduce_142(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 538)
  def _reduce_143(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 543)
  def _reduce_144(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 547)
  def _reduce_145(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 552)
  def _reduce_146(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 565)
  def _reduce_154(val, _values)
               val[1]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 570)
  def _reduce_155(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 574)
  def _reduce_156(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 579)
  def _reduce_157(val, _values)
              {}
        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 583)
  def _reduce_158(val, _values)
              val[1]
        
  end
.,.,

# reduce 159 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 589)
  def _reduce_160(val, _values)
                    val[0].merge(val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 594)
  def _reduce_161(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 598)
  def _reduce_162(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 607)
  def _reduce_166(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 611)
  def _reduce_167(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 615)
  def _reduce_168(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 620)
  def _reduce_169(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 624)
  def _reduce_170(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 629)
  def _reduce_171(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 633)
  def _reduce_172(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 638)
  def _reduce_173(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 642)
  def _reduce_174(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 647)
  def _reduce_175(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 651)
  def _reduce_176(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
