#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'
require 'set'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 660)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CHANGE
  CREATE
  CONTAINS
  COUNT
  DELETE
  DEL
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEW_AND_OLD_IMAGES
  NEW_IMAGE
  NEXT
  NOT
  NUMBER
  OLD_IMAGE
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STREAM
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.check KEYWORD_REGEXP) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan KEYWORD_REGEXP
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.check /NULL/i) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan /NULL/i
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/\[\]\{\}:]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_]*|i)
      if ['true', 'false'].include?(tok)
        yield [:BOOL, 'true' == tok]
      else
        yield [:IDENTIFIER, tok]
      end
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
   188,   188,   273,   303,   119,   231,   271,   188,    55,    53,
    64,   201,    53,   188,    53,   190,   190,   202,    53,   183,
   183,   226,   190,   136,   302,   188,   183,    25,   190,   225,
   187,   187,   183,    56,   188,   230,    50,   187,   299,    49,
   190,    74,    51,   187,   183,    51,    48,    51,   299,   190,
   272,    51,   270,   183,    41,   187,   184,   184,   300,   226,
    42,   116,   297,   184,   187,   278,   299,   225,   300,   184,
   185,   185,   186,   186,   279,   189,   189,   185,   219,   186,
   232,   184,   189,   185,   188,   186,   300,   135,   189,   276,
   184,   141,   188,   188,   222,   185,   242,   186,   277,   190,
   189,   188,   188,   183,   185,   102,   186,   190,   190,   189,
   116,   183,   183,   164,   187,   238,   190,   190,   142,    95,
   183,   183,   187,   187,   116,    96,   165,   166,   164,   334,
   134,   187,   187,   141,   102,   112,   188,    97,   335,    98,
   184,   165,   166,   264,   239,   240,   241,   243,   184,   184,
    70,   190,   149,   149,   185,   183,   186,   184,   184,   189,
   188,   148,   185,   185,   186,   186,   187,   189,   189,   188,
   188,   185,   185,   186,   186,   190,   189,   189,   149,   183,
    58,    96,    96,    70,   190,   190,    57,   358,   183,   183,
   187,   164,   184,    97,    97,    98,    98,   357,   359,   187,
   187,   164,   358,   101,   165,   166,   185,   164,   186,   100,
   153,   189,   357,   359,   165,   166,   184,   132,     3,     4,
   165,   166,   160,    18,   242,   184,   184,   280,    21,   372,
   185,    19,   186,   161,    20,   189,   281,   348,   373,   185,
   185,   186,   186,   238,   189,   189,   335,   154,   156,   157,
   158,   159,    80,    81,    82,    83,    22,    23,    24,    25,
   288,   287,    36,    37,    26,    38,    39,    80,    81,    82,
    83,   246,   239,   240,   241,   243,   245,   247,   250,   251,
   252,    97,    27,    98,   203,    28,   162,    29,   204,   131,
    30,    32,    33,    34,    97,    35,    98,   363,    97,   364,
    98,   130,   171,   172,   173,   149,   175,   176,   112,   128,
   127,   126,   193,   194,   197,    64,   199,   102,   125,    96,
   122,   118,   206,    96,   116,   210,   213,   214,   215,   137,
   217,   218,    70,   112,   109,    64,    64,   148,   108,   237,
   107,   253,   254,   255,   256,   257,   258,   260,   197,   262,
   106,   266,   134,   268,   149,   105,   104,   274,   275,   103,
   102,    92,   197,    89,   190,    90,    89,   289,   291,   292,
   293,   294,   295,    87,    64,    86,   237,   213,    85,    84,
   307,   171,   149,    64,    77,    76,    75,    72,   315,   316,
   317,   318,   319,   320,    71,   323,   324,   325,    70,   327,
   328,   329,   210,    64,    68,   333,    67,    66,   337,   338,
   339,    65,   260,    64,    62,   344,   345,   346,    64,    61,
    60,    59,   352,   325,   353,   354,    46,    45,    44,   361,
   362,    43,   366,   368,   369,   370,    40,    31,   374,   375,
   376,   202,   204 ]

racc_action_check = [
   291,   142,   223,   260,    87,   190,   220,   185,    27,    49,
   174,   160,    26,   318,    25,   291,   142,   160,   107,   291,
   142,   186,   185,   105,   260,   194,   185,    87,   318,   186,
   291,   142,   318,    27,   274,   190,    25,   185,   325,    25,
   194,    49,    49,   318,   194,    26,    25,    25,   344,   274,
   223,   107,   220,   274,    20,   194,   291,   142,   325,   273,
    20,   109,   258,   185,   274,   228,   258,   273,   344,   318,
   291,   142,   291,   142,   228,   291,   142,   185,   185,   185,
   190,   194,   185,   318,   271,   318,   258,   104,   318,   227,
   274,   110,   329,   333,   186,   194,   213,   194,   227,   271,
   194,   335,   264,   271,   274,   113,   274,   329,   333,   274,
   110,   329,   333,   345,   271,   213,   335,   264,   112,    67,
   335,   264,   329,   333,   113,    67,   345,   345,   130,   321,
   103,   335,   264,   144,   145,   114,   263,    67,   321,    67,
   271,   130,   130,   213,   213,   213,   213,   213,   329,   333,
   115,   263,   144,   145,   271,   263,   271,   335,   264,   271,
   246,   116,   329,   333,   329,   333,   263,   329,   333,   275,
   244,   335,   264,   335,   264,   246,   335,   264,   118,   246,
    28,   131,   162,   119,   275,   244,    28,   353,   275,   244,
   246,   366,   263,   131,   162,   131,   162,   353,   353,   275,
   244,   352,   354,    68,   366,   366,   263,   297,   263,    68,
   125,   263,   354,   354,   352,   352,   246,   102,     0,     0,
   297,   297,   127,     0,   197,   275,   244,   229,     0,   367,
   246,     0,   246,   128,     0,   246,   229,   342,   367,   275,
   244,   275,   244,   197,   275,   244,   342,   126,   126,   126,
   126,   126,    55,    55,    55,    55,     0,     0,     0,     0,
   247,   247,    18,    18,     0,    18,    18,    84,    84,    84,
    84,   197,   197,   197,   197,   197,   197,   197,   197,   197,
   197,   169,     0,   169,   161,     0,   129,     0,   161,   101,
     0,     2,     2,     2,   153,     2,   153,   360,    94,   360,
    94,   100,   133,   134,   135,   136,   137,   138,   141,    98,
    97,    96,   146,   148,   149,   150,   151,   152,    95,    93,
    89,    86,   163,   168,    85,   170,   171,   172,   173,   106,
   175,   176,    79,    78,    77,   191,   192,   193,    76,   195,
    75,   199,   201,   202,   203,   204,   206,   209,   210,   211,
    74,   214,   215,   217,   218,    73,    72,   225,   226,    71,
    69,    66,   237,    65,   245,    64,    63,   252,   253,   254,
   255,   256,   257,    59,   259,    58,   261,   262,    57,    56,
   266,   267,   268,   269,    54,    52,    50,    48,   277,   279,
   281,   285,   288,   290,    47,   292,   294,   296,    44,   299,
   300,   306,   308,   309,    43,   320,    40,    39,   326,   327,
   328,    37,   330,    36,    35,   337,   338,   339,   341,    34,
    31,    29,   346,   349,   350,   351,    24,    23,    22,   355,
   359,    21,   361,   362,   363,   364,    19,     1,   369,   370,
   373,   374,   375 ]

racc_action_pointer = [
   216,   437,   289,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   254,   427,
    41,   422,   419,   414,   413,     1,    -1,    -5,   142,   349,
   nil,   420,   nil,   nil,   414,   409,   349,   401,   nil,   398,
   393,   nil,   nil,   391,   385,   nil,   nil,   350,   367,    -4,
   339,   nil,   355,   nil,   340,   185,   366,   365,   331,   360,
   nil,   nil,   nil,   352,   330,   349,   348,   103,   189,   330,
   nil,   346,   310,   311,   330,   305,   325,   321,   320,   319,
   nil,   nil,   nil,   nil,   200,   275,   308,   -16,   nil,   315,
   nil,   nil,   nil,   297,   264,   301,   288,   287,   286,   nil,
   288,   276,   204,   112,    66,    10,   283,     5,   nil,    12,
    61,   nil,    95,    75,   122,   137,   148,   nil,   129,   170,
   nil,   nil,   nil,   nil,   nil,   197,   223,   187,   198,   265,
   109,   159,   nil,   253,   286,   260,   256,   285,   263,   nil,
   nil,   295,    -4,   nil,   103,   104,   262,   nil,   290,   301,
   251,   295,   287,   260,   nil,   nil,   nil,   nil,   nil,   nil,
   -19,   254,   160,   293,   nil,   nil,   nil,   nil,   301,   247,
   260,   313,   307,   315,   -54,   286,   318,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     2,    16,   nil,   nil,   nil,
     0,   271,   272,   324,    20,   289,   nil,   220,   nil,   268,
   nil,   306,   320,   310,   322,   nil,   316,   nil,   nil,   285,
   335,   299,   nil,    92,   338,   334,   nil,   340,   305,   nil,
   -24,   nil,   nil,   -28,   nil,   278,   279,    68,    44,   206,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   349,   nil,   nil,
   nil,   nil,   nil,   nil,   165,   344,   155,   200,   nil,   nil,
   nil,   nil,   308,   348,   346,   335,   348,   337,    49,   310,
   -39,   326,   364,   131,    97,   nil,   359,   332,   333,   319,
   nil,    79,   nil,    54,    29,   164,   nil,   353,   nil,   384,
   nil,   310,   nil,   nil,   nil,   341,   nil,   nil,   331,   nil,
   363,    -5,   360,   nil,   361,   nil,   367,   188,   nil,   386,
   383,   nil,   nil,   nil,   nil,   nil,   351,   nil,   337,   339,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,
   385,   108,   nil,   nil,   nil,    21,   377,   389,   397,    87,
   350,   nil,   nil,    88,   nil,    96,   nil,   385,   403,   397,
   nil,   354,   216,   nil,    31,    94,   409,   nil,   nil,   393,
   403,   404,   182,   159,   174,   399,   nil,   nil,   nil,   410,
   263,   419,   420,   411,   412,   nil,   172,   208,   nil,   403,
   404,   nil,   nil,   427,   405,   408,   nil ]

racc_action_default = [
  -176,  -176,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -176,  -176,
  -176,  -176,  -176,  -176,  -176,  -176,  -176,  -176,  -176,  -176,
  -145,  -176,    -2,    -3,  -176,  -176,  -116,  -176,   -23,  -176,
  -176,   -32,   -33,  -176,  -176,   -71,   -72,  -176,  -176,  -176,
  -176,   -79,   -80,   -81,  -176,  -176,  -176,  -176,  -176,  -176,
   377,    -4,    -5,   -25,  -176,   -25,  -176,  -176,  -176,   -70,
  -174,  -176,  -176,  -176,  -176,  -176,  -176,  -176,  -176,  -176,
  -124,  -125,  -126,  -127,  -176,  -176,  -176,  -176,   -21,  -176,
  -117,   -22,   -24,   -27,   -28,  -176,  -176,  -176,  -176,   -55,
  -176,  -176,  -176,   -83,  -176,  -176,  -176,  -176,   -82,  -176,
  -176,  -128,  -176,  -176,  -176,  -176,  -176,  -135,   -98,  -176,
  -138,  -139,   -26,   -29,   -30,  -176,  -176,  -176,  -176,  -176,
  -176,   -35,  -175,   -85,  -176,  -176,   -98,  -176,  -176,   -78,
  -120,  -176,  -176,  -122,   -98,   -98,  -131,  -132,  -176,  -176,
  -116,  -176,  -140,  -176,   -40,   -41,   -42,   -43,   -44,   -45,
  -176,  -176,  -176,  -176,   -50,   -51,   -52,   -36,   -37,  -176,
  -118,  -176,  -176,  -176,  -116,  -176,  -176,  -129,  -130,  -146,
  -147,  -148,  -149,  -150,  -151,  -176,  -176,  -162,  -163,  -164,
  -176,  -116,  -116,  -176,  -176,   -99,  -100,  -176,  -136,  -176,
   -31,  -176,  -176,  -176,  -176,   -34,   -46,   -38,   -39,  -113,
  -176,   -86,   -87,  -176,  -176,   -83,   -75,  -176,   -98,  -152,
  -176,  -154,  -156,  -176,  -158,  -176,  -176,  -176,  -176,  -176,
  -168,  -170,  -172,  -121,  -123,  -133,  -134,  -176,   -92,   -93,
   -94,   -95,   -96,   -97,  -176,  -176,  -176,  -176,  -106,  -107,
  -108,  -109,  -176,  -176,  -176,  -176,  -176,  -176,  -176,  -116,
  -176,  -119,  -176,  -176,  -176,   -91,  -176,   -85,   -98,  -116,
  -153,  -176,  -157,  -176,  -176,  -176,  -165,  -176,  -166,  -176,
  -167,  -176,  -101,  -102,  -103,  -176,  -105,  -111,  -176,  -110,
  -137,  -176,  -176,   -56,  -176,   -57,   -47,  -176,   -58,  -176,
  -176,   -73,  -114,  -115,   -88,   -89,  -176,   -84,  -118,  -116,
   -77,  -155,  -159,  -160,  -161,  -169,  -171,  -173,  -176,  -112,
  -176,  -176,  -143,   -53,   -54,  -176,  -176,  -176,  -176,  -176,
  -113,   -76,  -104,  -176,  -141,  -176,   -59,   -48,  -176,  -176,
   -90,  -116,  -176,  -144,  -176,  -176,  -176,   -74,  -142,   -49,
  -176,  -176,  -176,  -176,  -176,   -63,   -60,   -65,   -66,  -176,
   -61,  -176,  -176,  -176,  -176,   -62,  -176,  -176,   -68,  -176,
  -176,   -64,   -67,  -176,  -176,  -176,   -69 ]

racc_goto_table = [
    63,   178,   163,   209,   150,   170,   259,   133,    93,   212,
    94,    11,   224,   147,    12,   195,   296,    69,   321,   110,
   167,    79,   174,   248,    47,    54,    88,    78,    91,     1,
   191,   192,   351,   117,   336,   124,   123,   356,   360,   265,
   367,   365,   155,   129,   221,    17,    16,   211,    73,    15,
   115,   205,   113,   236,   263,   144,   114,   139,   140,    14,
   342,   143,    13,    10,   282,   244,   284,   286,   249,     9,
     8,     7,   177,   146,     6,   151,   261,   290,     5,   220,
   223,     2,   227,   228,   229,   nil,   nil,   nil,   145,   nil,
   235,   nil,   152,   nil,   200,   nil,   nil,   nil,   120,   312,
   304,   121,   349,   283,   269,   285,   138,   nil,   nil,   nil,
   208,   207,   nil,   nil,   198,   nil,   nil,   nil,   nil,   267,
   nil,   nil,   305,   306,   nil,   nil,   nil,   341,   nil,   nil,
   311,   nil,   nil,   313,   314,   nil,   nil,   nil,   216,   308,
   nil,   330,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   309,   233,   234,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   326,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   332,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   340,   nil,
   nil,   nil,   nil,   nil,   343,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   350,   nil,   nil,
   nil,   nil,   nil,   301,   355,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   310,   nil,   nil,   nil,   nil,   371,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   331,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   347 ]

racc_goto_check = [
    16,    42,    23,    34,    36,    33,    35,    32,    18,    40,
    19,     9,    64,    55,    10,    44,    24,    30,    58,    51,
    21,    52,    36,    43,    31,    31,    17,    50,    17,     1,
    36,    36,    28,    37,    26,    18,    19,    27,    27,    43,
    29,    25,    22,    20,    42,    15,    14,    39,    31,    13,
    52,    21,    30,    42,    41,    51,    50,    37,    37,    12,
    58,    37,    11,     8,    45,    46,    47,    48,    49,     7,
     6,     5,    53,    54,     4,    56,    44,    57,     3,    62,
    63,     2,    65,    66,    67,   nil,   nil,   nil,    30,   nil,
    55,   nil,    30,   nil,    18,   nil,   nil,   nil,     9,    64,
    40,    10,    24,    42,    36,    42,    31,   nil,   nil,   nil,
    18,    19,   nil,   nil,    16,   nil,   nil,   nil,   nil,    32,
   nil,   nil,    42,    42,   nil,   nil,   nil,    35,   nil,   nil,
    42,   nil,   nil,    42,    42,   nil,   nil,   nil,    16,    33,
   nil,    34,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    36,    16,    16,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    42,   nil,
   nil,   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,
   nil,   nil,   nil,    16,    23,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16 ]

racc_goto_pointer = [
   nil,    29,    81,    78,    74,    71,    70,    69,    63,    11,
    14,    62,    59,    49,    46,    45,   -36,   -37,   -59,   -57,
   -57,  -111,   -84,  -128,  -242,  -319,  -291,  -316,  -314,  -322,
   -27,    -1,   -96,  -128,  -167,  -203,  -114,   -52,   nil,  -124,
  -162,  -159,  -141,  -174,  -134,  -173,  -132,  -179,  -180,  -129,
   -28,   -59,   -34,   -69,   -43,  -103,   -44,  -176,  -273,   nil,
   nil,   nil,  -106,  -106,  -174,  -108,  -107,  -106 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   168,   169,
   nil,   nil,   nil,   nil,   nil,    99,   298,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    52,   nil,
   nil,   nil,   322,   nil,   nil,   196,   nil,   180,   nil,   nil,
   nil,   nil,   nil,   111,   nil,   nil,   nil,   nil,   nil,   179,
   181,   182,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 82, :_reduce_1,
  2, 82, :_reduce_2,
  2, 82, :_reduce_3,
  3, 82, :_reduce_4,
  3, 82, :_reduce_5,
  1, 82, :_reduce_6,
  1, 82, :_reduce_7,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  4, 84, :_reduce_21,
  4, 84, :_reduce_22,
  2, 84, :_reduce_23,
  4, 84, :_reduce_24,
  0, 98, :_reduce_none,
  2, 98, :_reduce_26,
  4, 85, :_reduce_27,
  4, 85, :_reduce_28,
  5, 85, :_reduce_29,
  5, 85, :_reduce_30,
  7, 85, :_reduce_31,
  2, 86, :_reduce_32,
  2, 86, :_reduce_33,
  7, 87, :_reduce_34,
  5, 87, :_reduce_35,
  6, 87, :_reduce_36,
  1, 102, :_reduce_37,
  2, 102, :_reduce_38,
  2, 102, :_reduce_39,
  3, 100, :_reduce_40,
  3, 100, :_reduce_41,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  3, 101, :_reduce_46,
  5, 101, :_reduce_47,
  7, 101, :_reduce_48,
  9, 101, :_reduce_49,
  1, 104, :_reduce_50,
  1, 104, :_reduce_51,
  1, 104, :_reduce_52,
  7, 99, :_reduce_53,
  7, 99, :_reduce_54,
  1, 99, :_reduce_none,
  6, 106, :_reduce_56,
  6, 106, :_reduce_57,
  1, 105, :_reduce_58,
  3, 105, :_reduce_59,
  7, 107, :_reduce_60,
  7, 107, :_reduce_61,
  8, 107, :_reduce_62,
  2, 109, :_reduce_63,
  5, 109, :_reduce_64,
  1, 108, :_reduce_65,
  1, 108, :_reduce_66,
  4, 108, :_reduce_67,
  1, 110, :_reduce_68,
  3, 110, :_reduce_69,
  3, 88, :_reduce_70,
  2, 89, :_reduce_71,
  2, 89, :_reduce_72,
  9, 90, :_reduce_73,
  12, 90, :_reduce_74,
  7, 91, :_reduce_75,
  10, 91, :_reduce_76,
  9, 91, :_reduce_77,
  5, 92, :_reduce_78,
  1, 112, :_reduce_79,
  1, 112, :_reduce_80,
  1, 119, :_reduce_81,
  3, 119, :_reduce_82,
  0, 113, :_reduce_none,
  5, 113, :_reduce_84,
  0, 114, :_reduce_none,
  2, 114, :_reduce_86,
  1, 120, :_reduce_87,
  3, 120, :_reduce_88,
  3, 121, :_reduce_89,
  5, 121, :_reduce_90,
  1, 122, :_reduce_none,
  1, 124, :_reduce_92,
  1, 124, :_reduce_93,
  1, 124, :_reduce_94,
  1, 124, :_reduce_95,
  1, 124, :_reduce_96,
  1, 124, :_reduce_none,
  0, 117, :_reduce_none,
  2, 117, :_reduce_99,
  1, 125, :_reduce_100,
  3, 125, :_reduce_101,
  3, 126, :_reduce_102,
  3, 126, :_reduce_103,
  5, 126, :_reduce_104,
  3, 126, :_reduce_105,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_108,
  1, 130, :_reduce_none,
  2, 130, :_reduce_110,
  1, 129, :_reduce_111,
  2, 129, :_reduce_112,
  0, 116, :_reduce_none,
  2, 116, :_reduce_114,
  2, 116, :_reduce_115,
  0, 97, :_reduce_none,
  2, 97, :_reduce_117,
  0, 115, :_reduce_none,
  2, 115, :_reduce_119,
  5, 93, :_reduce_120,
  7, 93, :_reduce_121,
  5, 93, :_reduce_122,
  7, 93, :_reduce_123,
  1, 131, :_reduce_124,
  1, 131, :_reduce_125,
  1, 133, :_reduce_126,
  1, 133, :_reduce_127,
  1, 132, :_reduce_128,
  3, 132, :_reduce_129,
  3, 134, :_reduce_130,
  2, 118, :_reduce_131,
  1, 135, :_reduce_132,
  3, 135, :_reduce_133,
  3, 136, :_reduce_134,
  4, 94, :_reduce_135,
  6, 94, :_reduce_136,
  8, 95, :_reduce_137,
  4, 95, :_reduce_138,
  4, 95, :_reduce_139,
  1, 137, :_reduce_none,
  3, 138, :_reduce_141,
  5, 138, :_reduce_142,
  1, 139, :_reduce_143,
  3, 139, :_reduce_144,
  1, 96, :_reduce_145,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  2, 141, :_reduce_none,
  3, 141, :_reduce_153,
  1, 143, :_reduce_154,
  3, 143, :_reduce_155,
  2, 142, :_reduce_156,
  3, 142, :_reduce_157,
  1, 144, :_reduce_none,
  3, 144, :_reduce_159,
  3, 145, :_reduce_160,
  3, 145, :_reduce_161,
  1, 140, :_reduce_none,
  1, 140, :_reduce_none,
  1, 140, :_reduce_none,
  3, 128, :_reduce_165,
  3, 128, :_reduce_166,
  3, 128, :_reduce_167,
  1, 146, :_reduce_168,
  3, 146, :_reduce_169,
  1, 147, :_reduce_170,
  3, 147, :_reduce_171,
  1, 148, :_reduce_172,
  3, 148, :_reduce_173,
  1, 111, :_reduce_174,
  3, 111, :_reduce_175 ]

racc_reduce_n = 176

racc_shift_n = 377

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :CHANGE => 16,
  :INDEX => 17,
  :USE => 18,
  :STRING => 19,
  "(" => 20,
  ")" => 21,
  :STREAM => 22,
  :EQ => 23,
  :BOOL => 24,
  :NEW_IMAGE => 25,
  :OLD_IMAGE => 26,
  :NEW_AND_OLD_IMAGES => 27,
  :KEYS_ONLY => 28,
  :HASH => 29,
  "," => 30,
  :RANGE => 31,
  :NUMBER => 32,
  :BINARY => 33,
  :READ => 34,
  :NUMBER_VALUE => 35,
  :WRITE => 36,
  :GLOBAL => 37,
  :ALL => 38,
  :INCLUDE => 39,
  :DROP => 40,
  :DESCRIBE => 41,
  :DESC => 42,
  :SELECT => 43,
  :FROM => 44,
  :COUNT => 45,
  "*" => 46,
  "/" => 47,
  :GET => 48,
  :WHERE => 49,
  :AND => 50,
  :BETWEEN => 51,
  :LE => 52,
  :LT => 53,
  :GE => 54,
  :BEGINS_WITH => 55,
  :IN => 56,
  :IS => 57,
  :NE => 58,
  :CONTAINS => 59,
  :NOT => 60,
  :NULL => 61,
  :ORDER => 62,
  :ASC => 63,
  :LIMIT => 64,
  :HAVING => 65,
  :UPDATE => 66,
  :SET => 67,
  :ADD => 68,
  :DELETE => 69,
  :DEL => 70,
  :INSERT => 71,
  :INTO => 72,
  :VALUES => 73,
  :NEXT => 74,
  "[" => 75,
  "]" => 76,
  "{" => 77,
  "}" => 78,
  ":" => 79,
  :BINARY_VALUE => 80 }

racc_nt_base = 81

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "CHANGE",
  "INDEX",
  "USE",
  "STRING",
  "\"(\"",
  "\")\"",
  "STREAM",
  "EQ",
  "BOOL",
  "NEW_IMAGE",
  "OLD_IMAGE",
  "NEW_AND_OLD_IMAGES",
  "KEYS_ONLY",
  "HASH",
  "\",\"",
  "RANGE",
  "NUMBER",
  "BINARY",
  "READ",
  "NUMBER_VALUE",
  "WRITE",
  "GLOBAL",
  "ALL",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "DEL",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\":\"",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "capacity_clause",
  "stream_clause",
  "create_definition",
  "capacity_stream_clause",
  "stream_view_type",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "delete_or_del",
  "attr_to_update",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "list",
  "map",
  "list_items",
  "map_items",
  "map_item",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_27(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3], :stream => nil)
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 75)
  def _reduce_28(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => nil, :stream => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 79)
  def _reduce_29(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3], :stream => val[4])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 83)
  def _reduce_30(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[4], :stream => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 87)
  def _reduce_31(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => val[5], :capacity => val[6])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 92)
  def _reduce_32(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 97)
  def _reduce_33(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 102)
  def _reduce_34(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6][:capacity], :stream => val[6][:stream]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 106)
  def _reduce_35(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => nil, :stream => nil)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 110)
  def _reduce_36(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5][:capacity], :stream => val[5][:stream])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 115)
  def _reduce_37(val, _values)
                                {:capacity => val[0], :stream => nil}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 119)
  def _reduce_38(val, _values)
                                {:capacity => val[0], :stream => val[1]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 123)
  def _reduce_39(val, _values)
                                {:capacity => val[1], :stream => val[0]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 128)
  def _reduce_40(val, _values)
                        val[2]
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 132)
  def _reduce_41(val, _values)
                        val[2]
                  
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 142)
  def _reduce_46(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 146)
  def _reduce_47(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => val[4]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 150)
  def _reduce_48(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 154)
  def _reduce_49(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 159)
  def _reduce_50(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 163)
  def _reduce_51(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 167)
  def _reduce_52(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 172)
  def _reduce_53(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 176)
  def _reduce_54(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 182)
  def _reduce_56(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 186)
  def _reduce_57(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 191)
  def _reduce_58(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 195)
  def _reduce_59(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 200)
  def _reduce_60(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 204)
  def _reduce_61(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 208)
  def _reduce_62(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 213)
  def _reduce_63(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 217)
  def _reduce_64(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 225)
  def _reduce_65(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 229)
  def _reduce_66(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 233)
  def _reduce_67(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 238)
  def _reduce_68(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 242)
  def _reduce_69(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 247)
  def _reduce_70(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 252)
  def _reduce_71(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 256)
  def _reduce_72(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 261)
  def _reduce_73(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 265)
  def _reduce_74(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 270)
  def _reduce_75(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 274)
  def _reduce_76(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 278)
  def _reduce_77(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 283)
  def _reduce_78(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 288)
  def _reduce_79(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 292)
  def _reduce_80(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 297)
  def _reduce_81(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 301)
  def _reduce_82(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 83 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 307)
  def _reduce_84(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 85 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 313)
  def _reduce_86(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 318)
  def _reduce_87(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 322)
  def _reduce_88(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 327)
  def _reduce_89(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 331)
  def _reduce_90(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 91 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 338)
  def _reduce_92(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 342)
  def _reduce_93(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 346)
  def _reduce_94(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 350)
  def _reduce_95(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 354)
  def _reduce_96(val, _values)
                          :GT
                    
  end
.,.,

# reduce 97 omitted

# reduce 98 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 361)
  def _reduce_99(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 366)
  def _reduce_100(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 370)
  def _reduce_101(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 375)
  def _reduce_102(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 379)
  def _reduce_103(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 383)
  def _reduce_104(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 387)
  def _reduce_105(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 106 omitted

# reduce 107 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 393)
  def _reduce_108(val, _values)
                      :NE
                
  end
.,.,

# reduce 109 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 399)
  def _reduce_110(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 403)
  def _reduce_111(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 407)
  def _reduce_112(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 113 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 413)
  def _reduce_114(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 417)
  def _reduce_115(val, _values)
                       false
                 
  end
.,.,

# reduce 116 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 423)
  def _reduce_117(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 118 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 429)
  def _reduce_119(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 434)
  def _reduce_120(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 438)
  def _reduce_121(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 442)
  def _reduce_122(val, _values)
                      attrs = {}
                  val[3].each {|i| attrs[i] = true }
                  struct(:UPDATE, :table => val[1], :action => val[2], :attrs => attrs, :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 448)
  def _reduce_123(val, _values)
                      attrs = {}
                  val[4].each {|i| attrs[i] = true }
                  struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => attrs, :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 455)
  def _reduce_124(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 459)
  def _reduce_125(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 464)
  def _reduce_126(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 468)
  def _reduce_127(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 473)
  def _reduce_128(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 477)
  def _reduce_129(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 482)
  def _reduce_130(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 487)
  def _reduce_131(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 492)
  def _reduce_132(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 496)
  def _reduce_133(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 501)
  def _reduce_134(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 506)
  def _reduce_135(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 510)
  def _reduce_136(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 515)
  def _reduce_137(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 519)
  def _reduce_138(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 523)
  def _reduce_139(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 140 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 530)
  def _reduce_141(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 534)
  def _reduce_142(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 539)
  def _reduce_143(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 543)
  def _reduce_144(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 548)
  def _reduce_145(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 561)
  def _reduce_153(val, _values)
               val[1]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 566)
  def _reduce_154(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 570)
  def _reduce_155(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 575)
  def _reduce_156(val, _values)
              {}
        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 579)
  def _reduce_157(val, _values)
              val[1]
        
  end
.,.,

# reduce 158 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 585)
  def _reduce_159(val, _values)
                    val[0].merge(val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 590)
  def _reduce_160(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 594)
  def _reduce_161(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 603)
  def _reduce_165(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 607)
  def _reduce_166(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 611)
  def _reduce_167(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 616)
  def _reduce_168(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 620)
  def _reduce_169(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 625)
  def _reduce_170(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 629)
  def _reduce_171(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 634)
  def _reduce_172(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 638)
  def _reduce_173(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 643)
  def _reduce_174(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 647)
  def _reduce_175(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
