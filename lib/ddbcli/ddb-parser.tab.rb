#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'ddbcli/ddb-binary'
require 'set'

module DynamoDB

class Parser < Racc::Parser

module_eval(<<'...end ddb-parser.y/module_eval...', 'ddb-parser.y', 627)

KEYWORDS = %w(
  ADD
  ALL
  ALTER
  AND
  ASC
  BEGINS_WITH
  BETWEEN
  BINARY
  CHANGE
  CREATE
  CONTAINS
  COUNT
  DELETE
  DEL
  DESCRIBE
  DESC
  DROP
  FROM
  GET
  GLOBAL
  HASH
  HAVING
  INCLUDE
  INDEX
  INSERT
  INTO
  IN
  IS
  KEYS_ONLY
  LIKE
  LIMIT
  NEXT
  NOT
  NUMBER
  ORDER
  RANGE
  READ
  REGIONS
  SELECT
  SET
  SHOW
  STATUS
  STRING
  TABLES
  TABLE
  UPDATE
  VALUES
  WHERE
  WRITE
  USE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

@@structs = {}

def struct(name, attrs = {})
  unless (clazz = @@structs[name])
    clazz = attrs.empty? ? Struct.new(name.to_s) : Struct.new(name.to_s, *attrs.keys)
    @@structs[name] = clazz
  end

  obj = clazz.new

  attrs.each do |key, val|
    obj.send("#{key}=", val)
  end

  return obj
end
private :struct

def scan
  tok = nil
  @prev_tokens = []

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:>>|<>|!=|>=|<=|>|<|=)/)
      sym = {
        '>>' => :GTGT,
        '<>' => :NE,
        '!=' => :NE,
        '>=' => :GE,
        '<=' => :LE,
        '>'  => :GT,
        '<'  => :LT,
        '='  => :EQ,
      }.fetch(tok)
      yield [sym, tok]
    elsif (tok = @ss.check KEYWORD_REGEXP) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan KEYWORD_REGEXP
      yield [tok.upcase.to_sym, tok]
    elsif (tok = @ss.check /NULL/i) and @ss.rest.slice(tok.length) !~ /\A\w/
      tok = @ss.scan /NULL/i
      yield [:NULL, nil]
    elsif (tok = @ss.scan /`(?:[^`]|``)*`/)
      yield [:IDENTIFIER, tok.slice(1...-1).gsub(/``/, '`')]
    elsif (tok = @ss.scan /x'(?:[^']|'')*'/) #'
      hex = tok.slice(2...-1).gsub(/''/, "'")
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /x"(?:[^"]|"")*"/) #"
      hex = tok.slice(2...-1).gsub(/""/, '"')
      bin = DynamoDB::Binary.new([hex].pack('H*'))
      yield [:BINARY_VALUE, bin]
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/''/, "'")]
    elsif (tok = @ss.scan /"(?:[^"]|"")*"/) #"
      yield [:STRING_VALUE, tok.slice(1...-1).gsub(/""/, '"')]
    elsif (tok = @ss.scan /\d+(?:\.\d+)?/)
      yield [:NUMBER_VALUE, (tok =~ /\./ ? tok.to_f : tok.to_i)]
    elsif (tok = @ss.scan /[,\(\)\*\/\[\]\{\}:]/)
      yield [tok, tok]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\|(?:.*)/)
      yield [:RUBY_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan /\!(?:.*)/)
      yield [:SHELL_SCRIPT, tok.slice(1..-1)]
    elsif (tok = @ss.scan %r|[-.0-9a-z_]*|i)
      if ['true', 'false'].include?(tok)
        yield [:BOOL, 'true' == tok]
      else
        yield [:IDENTIFIER, tok]
      end
    else
      raise_error(tok, @prev_tokens, @ss)
    end

    @prev_tokens << tok
  end

  yield [false, '']
end
private :scan

def raise_error(error_value, prev_tokens, scanner)
  errmsg = ["__#{error_value}__"]

  if prev_tokens and not prev_tokens.empty?
    toks = prev_tokens.reverse[0, 5].reverse
    toks.unshift('...') if prev_tokens.length > toks.length
    errmsg.unshift(toks.join.strip)
  end

  if scanner and not (rest = (scanner.rest || '').strip).empty?
    str = rest[0, 16]
    str += '...' if rest.length > str.length
    errmsg << str
  end

  raise Racc::ParseError, ('parse error on value: %s' % errmsg.join(' '))
end
private :raise_error

def parse
  yyparse self, :scan
end

def on_error(error_token_id, error_value, value_stack)
  raise_error(error_value, @prev_tokens, @ss)
end

def self.parse(obj)
  self.new(obj).parse
end

...end ddb-parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
   176,   259,   228,   212,   176,   257,    55,    53,   176,    53,
   191,   211,   176,   189,   192,   178,   176,   217,   100,   178,
   190,   212,   136,   178,   175,    56,   224,   178,   175,   211,
   331,   178,   175,    53,   176,    51,   175,    51,   176,   144,
   175,   216,   285,   114,   250,   225,   226,   227,   229,   178,
   285,   172,   258,   178,   256,   172,   286,   131,   175,   172,
    74,    51,   175,   172,   286,   171,   173,   172,   174,   171,
   173,   177,   174,   171,   173,   177,   174,   171,   173,   177,
   174,   171,   173,   177,   174,   172,   176,   177,   218,   172,
   208,    58,   262,   176,   263,   289,   114,   176,    57,   171,
   173,   178,   174,   171,   173,   177,   174,   136,   178,   177,
   175,    94,   178,    53,   100,   176,   288,   175,   117,   176,
   153,   175,    95,   176,   130,    96,   154,   155,   144,    50,
   178,   176,    49,   137,   178,   114,    25,   172,   178,   175,
    48,    51,   349,   175,   172,   350,   178,   175,   172,   283,
    41,   171,   173,   285,   174,   175,    42,   177,   171,   173,
   205,   174,   171,   173,   177,   174,   172,   286,   177,   153,
   172,   264,   153,   265,   172,   154,   155,   176,   154,   155,
   171,   173,   172,   174,   171,   173,   177,   174,   171,   173,
   177,   174,   178,   129,   177,    95,   171,   173,    96,   174,
    99,   175,   177,     3,     4,   153,    98,   228,    18,   274,
   273,   154,   155,    21,   153,    95,    19,   110,    96,    20,
   154,   155,    32,    33,    34,   266,    35,   267,   172,    36,
    37,   224,    38,    39,    70,   143,    22,    23,    24,    25,
   144,    70,   171,   173,    26,   174,   148,   149,   177,   232,
   225,   226,   227,   229,   231,   233,   236,   237,   238,   334,
    95,   321,    27,    96,   320,    28,   321,    29,   150,   151,
    30,    80,    81,    82,    83,    80,    81,    82,    83,   343,
   344,   345,   343,   344,   345,   358,   127,   359,   126,   159,
   160,   161,   144,   163,   164,   110,    61,   125,   123,   181,
   182,   185,    64,   187,   100,   122,   121,   120,   116,   194,
   196,   199,   200,   201,    64,   203,   204,    60,    59,   114,
    64,    64,   143,    70,   223,   110,   239,   240,   241,   242,
   243,   244,   246,   185,   248,   107,   252,   129,   254,   144,
   106,   105,   260,   261,   104,   103,   102,   185,   101,   178,
   100,    92,   275,   277,   278,   279,   280,   281,    89,    64,
    90,   223,   199,    46,    45,   293,   159,   144,    64,    44,
    89,    43,    87,   301,   302,   303,   304,   305,   306,    40,
   309,   310,   311,    86,   313,   314,   315,   196,    64,    85,
   319,    84,    77,   323,   324,   325,    76,   246,    62,    31,
   330,   132,   332,    64,    75,    64,    72,   338,   311,   339,
   340,    71,    70,    68,   347,   348,    67,   352,   354,   355,
   356,    66,    65,   360,   361,   362,   190,   192 ]

racc_action_check = [
   319,   209,   199,   259,   321,   206,    27,   105,   315,    26,
   150,   259,   304,   149,   150,   319,   277,   178,   140,   321,
   149,   174,   108,   315,   319,    27,   199,   304,   321,   174,
   324,   277,   315,    49,   261,   105,   304,    26,   260,   140,
   277,   178,   311,   108,   199,   199,   199,   199,   199,   261,
   330,   319,   209,   260,   206,   321,   311,   103,   261,   315,
    49,    49,   260,   304,   330,   319,   319,   277,   319,   321,
   321,   319,   321,   315,   315,   321,   315,   304,   304,   315,
   304,   277,   277,   304,   277,   261,   257,   277,   178,   260,
   174,    28,   213,   173,   213,   246,   107,   249,    28,   261,
   261,   257,   261,   260,   260,   261,   260,   139,   173,   260,
   257,    67,   249,    25,   111,   232,   246,   173,    87,   230,
   283,   249,    67,   182,   102,    67,   283,   283,   139,    25,
   232,   137,    25,   110,   230,   111,    87,   257,   182,   232,
    25,    25,   346,   230,   173,   346,   137,   182,   249,   244,
    20,   257,   257,   244,   257,   137,    20,   257,   173,   173,
   173,   173,   249,   249,   173,   249,   232,   244,   249,   125,
   230,   214,   338,   214,   182,   125,   125,   250,   338,   338,
   232,   232,   137,   232,   230,   230,   232,   230,   182,   182,
   230,   182,   250,   101,   182,   151,   137,   137,   151,   137,
    68,   250,   137,     0,     0,   352,    68,   185,     0,   233,
   233,   352,   352,     0,   331,   148,     0,   112,   148,     0,
   331,   331,     2,     2,     2,   215,     2,   215,   250,    18,
    18,   185,    18,    18,   113,   114,     0,     0,     0,     0,
   116,   117,   250,   250,     0,   250,   121,   122,   250,   185,
   185,   185,   185,   185,   185,   185,   185,   185,   185,   328,
   126,   328,     0,   126,   307,     0,   307,     0,   123,   124,
     0,    84,    84,    84,    84,    55,    55,    55,    55,   339,
   339,   339,   340,   340,   340,   353,   100,   353,    99,   128,
   129,   130,   131,   132,   133,   136,    34,    98,    96,   141,
   143,   144,   145,   146,   147,    95,    94,    89,    86,   152,
   158,   159,   160,   161,   162,   163,   164,    31,    29,    85,
   179,   180,   181,    79,   183,    78,   187,   189,   190,   191,
   192,   194,   195,   196,   197,    77,   200,   201,   203,   204,
    76,    75,   211,   212,    74,    73,    72,   223,    71,   231,
    69,    66,   238,   239,   240,   241,   242,   243,    65,   245,
    64,   247,   248,    24,    23,   252,   253,   254,   255,    22,
    63,    21,    59,   263,   265,   267,   271,   274,   276,    19,
   278,   280,   282,    58,   285,   286,   292,   294,   295,    57,
   306,    56,    54,   312,   313,   314,    52,   316,    35,     1,
   323,   104,   325,   327,    50,    36,    48,   332,   335,   336,
   337,    47,    44,    43,   341,   345,    40,   347,   348,   349,
   350,    39,    37,   355,   356,   359,   360,   361 ]

racc_action_pointer = [
   201,   399,   220,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   221,   370,
   137,   362,   360,   351,   350,   100,    -4,    -7,    59,   251,
   nil,   317,   nil,   nil,   291,   393,   346,   412,   nil,   412,
   403,   nil,   nil,   400,   399,   nil,   nil,   372,   386,    20,
   362,   nil,   373,   nil,   353,   213,   378,   376,   344,   359,
   nil,   nil,   nil,   356,   331,   344,   338,    95,   186,   327,
   nil,   335,   305,   306,   324,   312,   327,   322,   312,   310,
   nil,   nil,   nil,   nil,   209,   275,   295,    98,   nil,   302,
   nil,   nil,   nil,   nil,   289,   277,   270,   nil,   284,   275,
   273,   175,   103,    44,   360,    -6,   nil,    52,    -1,   nil,
   105,    91,   204,   221,   222,   nil,   196,   228,   nil,   nil,
   nil,   233,   218,   239,   248,   150,   233,   nil,   245,   273,
   252,   248,   272,   255,   nil,   nil,   282,   126,   nil,    84,
    -5,   254,   nil,   272,   288,   243,   282,   281,   188,   -10,
   -13,   168,   287,   nil,   nil,   nil,   nil,   nil,   250,   298,
   292,   300,   255,   276,   303,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    88,    16,   nil,   nil,   nil,    12,   261,
   262,   309,   118,   279,   nil,   203,   nil,   258,   nil,   297,
   300,   302,   302,   nil,   308,   275,   320,   289,   nil,    -2,
   323,   319,   nil,   325,   295,   nil,   -18,   nil,   nil,   -22,
   nil,   267,   268,    71,   150,   204,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   334,   nil,   nil,   nil,   nil,   nil,   nil,
   114,   329,   110,   154,   nil,   nil,   nil,   nil,   298,   333,
   326,   326,   328,   328,   136,   300,    58,   316,   349,    92,
   172,   nil,   344,   322,   323,   309,   nil,    81,   nil,    -2,
    33,    29,   nil,   344,   nil,   369,   nil,   299,   nil,   nil,
   nil,   331,   nil,   nil,   321,   nil,   355,    11,   351,   nil,
   352,   nil,   359,   101,   nil,   371,   368,   nil,   nil,   nil,
   nil,   nil,   341,   nil,   327,   329,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,   370,   243,   nil,   nil,
   nil,    25,   369,   374,   382,     3,   340,   nil,   nil,    -5,
   nil,    -1,   nil,   377,    17,   382,   nil,   344,   238,   nil,
    33,   195,   394,   nil,   nil,   385,   388,   389,   153,   247,
   250,   391,   nil,   nil,   nil,   395,   115,   404,   405,   391,
   392,   nil,   186,   264,   nil,   394,   395,   nil,   nil,   412,
   396,   400,   nil ]

racc_action_default = [
  -165,  -165,    -1,    -6,    -7,    -8,    -9,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,  -165,  -165,
  -165,  -165,  -165,  -165,  -165,  -165,  -165,  -165,  -165,  -165,
  -134,  -165,    -2,    -3,  -165,  -165,  -105,  -165,   -23,  -165,
  -165,   -29,   -30,  -165,  -165,   -60,   -61,  -165,  -165,  -165,
  -165,   -68,   -69,   -70,  -165,  -165,  -165,  -165,  -165,  -165,
   363,    -4,    -5,   -25,  -165,   -25,  -165,  -165,  -165,   -59,
  -163,  -165,  -165,  -165,  -165,  -165,  -165,  -165,  -165,  -165,
  -113,  -114,  -115,  -116,  -165,  -165,  -165,  -165,   -21,  -165,
  -106,   -22,   -24,   -27,  -165,  -165,  -165,   -44,  -165,  -165,
  -165,   -72,  -165,  -165,  -165,  -165,   -71,  -165,  -165,  -117,
  -165,  -165,  -165,  -165,  -165,  -124,   -87,  -165,  -127,  -128,
   -26,  -165,  -165,  -165,  -165,  -165,   -33,  -164,   -74,  -165,
  -165,   -87,  -165,  -165,   -67,  -109,  -165,  -165,  -111,   -87,
   -87,  -120,  -121,  -165,  -165,  -105,  -165,  -129,  -165,  -165,
  -165,  -165,  -165,   -39,   -40,   -41,   -32,   -34,  -107,  -165,
  -165,  -165,  -105,  -165,  -165,  -118,  -119,  -135,  -136,  -137,
  -138,  -139,  -140,  -165,  -165,  -151,  -152,  -153,  -165,  -105,
  -105,  -165,  -165,   -88,   -89,  -165,  -125,  -165,   -28,  -165,
  -165,  -165,  -165,   -31,   -35,  -102,  -165,   -75,   -76,  -165,
  -165,   -72,   -64,  -165,   -87,  -141,  -165,  -143,  -145,  -165,
  -147,  -165,  -165,  -165,  -165,  -165,  -157,  -159,  -161,  -110,
  -112,  -122,  -123,  -165,   -81,   -82,   -83,   -84,   -85,   -86,
  -165,  -165,  -165,  -165,   -95,   -96,   -97,   -98,  -165,  -165,
  -165,  -165,  -165,  -165,  -165,  -105,  -165,  -108,  -165,  -165,
  -165,   -80,  -165,   -74,   -87,  -105,  -142,  -165,  -146,  -165,
  -165,  -165,  -154,  -165,  -155,  -165,  -156,  -165,   -90,   -91,
   -92,  -165,   -94,  -100,  -165,   -99,  -126,  -165,  -165,   -45,
  -165,   -46,   -36,  -165,   -47,  -165,  -165,   -62,  -103,  -104,
   -77,   -78,  -165,   -73,  -107,  -105,   -66,  -144,  -148,  -149,
  -150,  -158,  -160,  -162,  -165,  -101,  -165,  -165,  -132,   -42,
   -43,  -165,  -165,  -165,  -165,  -165,  -102,   -65,   -93,  -165,
  -130,  -165,   -48,   -37,  -165,  -165,   -79,  -105,  -165,  -133,
  -165,  -165,  -165,   -63,  -131,   -38,  -165,  -165,  -165,  -165,
  -165,   -52,   -49,   -54,   -55,  -165,   -50,  -165,  -165,  -165,
  -165,   -51,  -165,  -165,   -57,  -165,  -165,   -53,   -56,  -165,
  -165,  -165,   -58 ]

racc_goto_table = [
    63,   152,   145,   195,   166,   158,   128,   198,   245,   282,
    93,    12,    69,    11,   183,   142,   210,   162,   307,   108,
   234,    78,    47,    54,     1,   179,   180,    79,    88,   115,
    91,   342,   346,   337,   251,   322,   351,   353,   156,   124,
   207,    17,    16,   197,    15,   249,    73,   111,    14,   222,
   112,   134,   135,   139,    13,   138,   113,    10,   268,   230,
   328,   270,   272,   235,     9,     8,   247,     7,   165,   157,
   141,     6,   146,   276,     5,   206,   209,     2,   213,   214,
   215,   140,   221,   nil,   nil,   147,   nil,   nil,   nil,   nil,
   255,   188,   nil,   nil,   193,   335,   290,   269,   119,   271,
   118,   298,   133,   nil,   nil,   nil,   253,   nil,   nil,   186,
   nil,   nil,   nil,   nil,   nil,   nil,   291,   292,   nil,   nil,
   nil,   nil,   nil,   nil,   297,   nil,   202,   299,   300,   327,
   294,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   316,
   295,   nil,   nil,   219,   220,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   312,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   318,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   326,   nil,   nil,   nil,   nil,   nil,   329,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   336,   nil,   287,
   nil,   nil,   nil,   nil,   341,   nil,   nil,   nil,   nil,   296,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   357,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   317,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   333 ]

racc_goto_check = [
    16,    21,    34,    32,    40,    31,    30,    38,    33,    22,
    18,    10,    28,     9,    42,    53,    62,    34,    56,    49,
    41,    48,    29,    29,     1,    34,    34,    50,    17,    35,
    17,    25,    25,    26,    41,    24,    23,    27,    20,    19,
    40,    15,    14,    37,    13,    39,    29,    28,    12,    40,
    48,    35,    35,    49,    11,    35,    50,     8,    43,    44,
    56,    45,    46,    47,     7,     6,    42,     5,    51,    18,
    52,     4,    54,    55,     3,    60,    61,     2,    63,    64,
    65,    28,    53,   nil,   nil,    28,   nil,   nil,   nil,   nil,
    34,    18,   nil,   nil,    18,    22,    38,    40,    10,    40,
     9,    62,    29,   nil,   nil,   nil,    30,   nil,   nil,    16,
   nil,   nil,   nil,   nil,   nil,   nil,    40,    40,   nil,   nil,
   nil,   nil,   nil,   nil,    40,   nil,    16,    40,    40,    33,
    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,
    34,   nil,   nil,    16,    16,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    40,   nil,   nil,   nil,   nil,   nil,    40,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,    16,
   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16 ]

racc_goto_pointer = [
   nil,    24,    77,    74,    71,    67,    65,    64,    57,    13,
    11,    54,    48,    44,    42,    41,   -36,   -35,   -57,   -59,
   -88,  -124,  -235,  -310,  -276,  -308,  -299,  -311,   -32,    -3,
   -95,  -123,  -155,  -187,  -114,   -56,   nil,  -116,  -152,  -154,
  -133,  -165,  -130,  -165,  -126,  -170,  -171,  -122,   -34,   -59,
   -28,   -68,   -44,   -99,   -45,  -166,  -259,   nil,   nil,   nil,
   -98,   -98,  -158,  -100,   -99,   -98 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    97,   284,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    52,   nil,   nil,   nil,
   308,   nil,   nil,   184,   nil,   168,   nil,   nil,   nil,   nil,
   nil,   109,   nil,   nil,   nil,   nil,   nil,   167,   169,   170,
   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 78, :_reduce_1,
  2, 78, :_reduce_2,
  2, 78, :_reduce_3,
  3, 78, :_reduce_4,
  3, 78, :_reduce_5,
  1, 78, :_reduce_6,
  1, 78, :_reduce_7,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  4, 80, :_reduce_21,
  4, 80, :_reduce_22,
  2, 80, :_reduce_23,
  4, 80, :_reduce_24,
  0, 94, :_reduce_none,
  2, 94, :_reduce_26,
  4, 81, :_reduce_27,
  7, 81, :_reduce_28,
  2, 82, :_reduce_29,
  2, 82, :_reduce_30,
  7, 83, :_reduce_31,
  6, 83, :_reduce_32,
  0, 97, :_reduce_33,
  1, 97, :_reduce_34,
  3, 96, :_reduce_35,
  5, 96, :_reduce_36,
  7, 96, :_reduce_37,
  9, 96, :_reduce_38,
  1, 98, :_reduce_39,
  1, 98, :_reduce_40,
  1, 98, :_reduce_41,
  7, 95, :_reduce_42,
  7, 95, :_reduce_43,
  1, 95, :_reduce_none,
  6, 100, :_reduce_45,
  6, 100, :_reduce_46,
  1, 99, :_reduce_47,
  3, 99, :_reduce_48,
  7, 101, :_reduce_49,
  7, 101, :_reduce_50,
  8, 101, :_reduce_51,
  2, 103, :_reduce_52,
  5, 103, :_reduce_53,
  1, 102, :_reduce_54,
  1, 102, :_reduce_55,
  4, 102, :_reduce_56,
  1, 104, :_reduce_57,
  3, 104, :_reduce_58,
  3, 84, :_reduce_59,
  2, 85, :_reduce_60,
  2, 85, :_reduce_61,
  9, 86, :_reduce_62,
  12, 86, :_reduce_63,
  7, 87, :_reduce_64,
  10, 87, :_reduce_65,
  9, 87, :_reduce_66,
  5, 88, :_reduce_67,
  1, 106, :_reduce_68,
  1, 106, :_reduce_69,
  1, 113, :_reduce_70,
  3, 113, :_reduce_71,
  0, 107, :_reduce_none,
  5, 107, :_reduce_73,
  0, 108, :_reduce_none,
  2, 108, :_reduce_75,
  1, 114, :_reduce_76,
  3, 114, :_reduce_77,
  3, 115, :_reduce_78,
  5, 115, :_reduce_79,
  1, 116, :_reduce_none,
  1, 118, :_reduce_81,
  1, 118, :_reduce_82,
  1, 118, :_reduce_83,
  1, 118, :_reduce_84,
  1, 118, :_reduce_85,
  1, 118, :_reduce_none,
  0, 111, :_reduce_none,
  2, 111, :_reduce_88,
  1, 119, :_reduce_89,
  3, 119, :_reduce_90,
  3, 120, :_reduce_91,
  3, 120, :_reduce_92,
  5, 120, :_reduce_93,
  3, 120, :_reduce_94,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 121, :_reduce_97,
  1, 124, :_reduce_none,
  2, 124, :_reduce_99,
  1, 123, :_reduce_100,
  2, 123, :_reduce_101,
  0, 110, :_reduce_none,
  2, 110, :_reduce_103,
  2, 110, :_reduce_104,
  0, 93, :_reduce_none,
  2, 93, :_reduce_106,
  0, 109, :_reduce_none,
  2, 109, :_reduce_108,
  5, 89, :_reduce_109,
  7, 89, :_reduce_110,
  5, 89, :_reduce_111,
  7, 89, :_reduce_112,
  1, 125, :_reduce_113,
  1, 125, :_reduce_114,
  1, 127, :_reduce_115,
  1, 127, :_reduce_116,
  1, 126, :_reduce_117,
  3, 126, :_reduce_118,
  3, 128, :_reduce_119,
  2, 112, :_reduce_120,
  1, 129, :_reduce_121,
  3, 129, :_reduce_122,
  3, 130, :_reduce_123,
  4, 90, :_reduce_124,
  6, 90, :_reduce_125,
  8, 91, :_reduce_126,
  4, 91, :_reduce_127,
  4, 91, :_reduce_128,
  1, 131, :_reduce_none,
  3, 132, :_reduce_130,
  5, 132, :_reduce_131,
  1, 133, :_reduce_132,
  3, 133, :_reduce_133,
  1, 92, :_reduce_134,
  1, 117, :_reduce_none,
  1, 117, :_reduce_none,
  1, 117, :_reduce_none,
  1, 117, :_reduce_none,
  1, 117, :_reduce_none,
  1, 117, :_reduce_none,
  2, 135, :_reduce_none,
  3, 135, :_reduce_142,
  1, 137, :_reduce_143,
  3, 137, :_reduce_144,
  2, 136, :_reduce_145,
  3, 136, :_reduce_146,
  1, 138, :_reduce_none,
  3, 138, :_reduce_148,
  3, 139, :_reduce_149,
  3, 139, :_reduce_150,
  1, 134, :_reduce_none,
  1, 134, :_reduce_none,
  1, 134, :_reduce_none,
  3, 122, :_reduce_154,
  3, 122, :_reduce_155,
  3, 122, :_reduce_156,
  1, 140, :_reduce_157,
  3, 140, :_reduce_158,
  1, 141, :_reduce_159,
  3, 141, :_reduce_160,
  1, 142, :_reduce_161,
  3, 142, :_reduce_162,
  1, 105, :_reduce_163,
  3, 105, :_reduce_164 ]

racc_reduce_n = 165

racc_shift_n = 363

racc_token_table = {
  false => 0,
  :error => 1,
  :RUBY_SCRIPT => 2,
  :SHELL_SCRIPT => 3,
  :GT => 4,
  :STRING_VALUE => 5,
  :GTGT => 6,
  :SHOW => 7,
  :TABLES => 8,
  :TABLE => 9,
  :STATUS => 10,
  :REGIONS => 11,
  :CREATE => 12,
  :IDENTIFIER => 13,
  :LIKE => 14,
  :ALTER => 15,
  :CHANGE => 16,
  :INDEX => 17,
  :USE => 18,
  :STRING => 19,
  "(" => 20,
  ")" => 21,
  :HASH => 22,
  "," => 23,
  :RANGE => 24,
  :NUMBER => 25,
  :BINARY => 26,
  :READ => 27,
  :EQ => 28,
  :NUMBER_VALUE => 29,
  :WRITE => 30,
  :GLOBAL => 31,
  :ALL => 32,
  :KEYS_ONLY => 33,
  :INCLUDE => 34,
  :DROP => 35,
  :DESCRIBE => 36,
  :DESC => 37,
  :SELECT => 38,
  :FROM => 39,
  :COUNT => 40,
  "*" => 41,
  "/" => 42,
  :GET => 43,
  :WHERE => 44,
  :AND => 45,
  :BETWEEN => 46,
  :LE => 47,
  :LT => 48,
  :GE => 49,
  :BEGINS_WITH => 50,
  :IN => 51,
  :IS => 52,
  :NE => 53,
  :CONTAINS => 54,
  :NOT => 55,
  :NULL => 56,
  :ORDER => 57,
  :ASC => 58,
  :LIMIT => 59,
  :HAVING => 60,
  :UPDATE => 61,
  :SET => 62,
  :ADD => 63,
  :DELETE => 64,
  :DEL => 65,
  :INSERT => 66,
  :INTO => 67,
  :VALUES => 68,
  :NEXT => 69,
  :BOOL => 70,
  "[" => 71,
  "]" => 72,
  "{" => 73,
  "}" => 74,
  ":" => 75,
  :BINARY_VALUE => 76 }

racc_nt_base = 77

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RUBY_SCRIPT",
  "SHELL_SCRIPT",
  "GT",
  "STRING_VALUE",
  "GTGT",
  "SHOW",
  "TABLES",
  "TABLE",
  "STATUS",
  "REGIONS",
  "CREATE",
  "IDENTIFIER",
  "LIKE",
  "ALTER",
  "CHANGE",
  "INDEX",
  "USE",
  "STRING",
  "\"(\"",
  "\")\"",
  "HASH",
  "\",\"",
  "RANGE",
  "NUMBER",
  "BINARY",
  "READ",
  "EQ",
  "NUMBER_VALUE",
  "WRITE",
  "GLOBAL",
  "ALL",
  "KEYS_ONLY",
  "INCLUDE",
  "DROP",
  "DESCRIBE",
  "DESC",
  "SELECT",
  "FROM",
  "COUNT",
  "\"*\"",
  "\"/\"",
  "GET",
  "WHERE",
  "AND",
  "BETWEEN",
  "LE",
  "LT",
  "GE",
  "BEGINS_WITH",
  "IN",
  "IS",
  "NE",
  "CONTAINS",
  "NOT",
  "NULL",
  "ORDER",
  "ASC",
  "LIMIT",
  "HAVING",
  "UPDATE",
  "SET",
  "ADD",
  "DELETE",
  "DEL",
  "INSERT",
  "INTO",
  "VALUES",
  "NEXT",
  "BOOL",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\":\"",
  "BINARY_VALUE",
  "$start",
  "stmt",
  "query",
  "show_stmt",
  "alter_stmt",
  "use_stmt",
  "create_stmt",
  "drop_stmt",
  "describe_stmt",
  "select_stmt",
  "scan_stmt",
  "get_stmt",
  "update_stmt",
  "delete_stmt",
  "insert_stmt",
  "next_stmt",
  "limit_clause",
  "like_clause",
  "capacity_clause",
  "create_definition",
  "capacity_or_stream_clause",
  "attr_type_list",
  "index_definition_list",
  "strict_capacity_clause",
  "index_definition",
  "index_type_definition",
  "global_index_keys",
  "index_include_attr_list",
  "identifier_list",
  "attrs_to_get",
  "use_index_clause",
  "select_where_clause",
  "having_clause",
  "order_clause",
  "scan_where_clause",
  "update_where_clause",
  "attrs_list",
  "select_expr_list",
  "select_expr",
  "select_operator",
  "value",
  "common_operator",
  "scan_expr_list",
  "scan_expr",
  "scan_operator",
  "value_list",
  "null_operator",
  "contains_operator",
  "set_or_add",
  "attr_to_update_list",
  "delete_or_del",
  "attr_to_update",
  "update_expr_list",
  "update_expr",
  "attr_to_insert_list",
  "insert_value_clause",
  "insert_value_list",
  "single_value",
  "list",
  "map",
  "list_items",
  "map_items",
  "map_item",
  "number_list",
  "string_list",
  "binary_list" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 5)
  def _reduce_1(val, _values)
               [val[0], nil, nil]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 9)
  def _reduce_2(val, _values)
               [val[0], :ruby, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 13)
  def _reduce_3(val, _values)
               [val[0], :shell, val[1]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 17)
  def _reduce_4(val, _values)
               [val[0], :overwrite, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 21)
  def _reduce_5(val, _values)
               [val[0], :append, val[2]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 25)
  def _reduce_6(val, _values)
               [struct(:NULL), :ruby, val[0]]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 29)
  def _reduce_7(val, _values)
               [struct(:NULL), :shell, val[0]]
         
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 48)
  def _reduce_21(val, _values)
                    struct(:SHOW_TABLES, :limit => val[2], :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 52)
  def _reduce_22(val, _values)
                    struct(:SHOW_TABLE_STATUS, :like => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 56)
  def _reduce_23(val, _values)
                    struct(:SHOW_REGIONS)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 60)
  def _reduce_24(val, _values)
                    struct(:SHOW_CREATE_TABLE, :table => val[3])
              
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 66)
  def _reduce_26(val, _values)
                      val[1]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 71)
  def _reduce_27(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => nil, :capacity => val[3])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 76)
  def _reduce_28(val, _values)
                     struct(:ALTER_TABLE, :table => val[2], :index_name => val[5], :capacity => val[6])
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 81)
  def _reduce_29(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 86)
  def _reduce_30(val, _values)
                   struct(:USE, :endpoint_or_region => val[1])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 91)
  def _reduce_31(val, _values)
                      struct(:CREATE, val[4].merge(:table => val[2], :capacity => val[6]))
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 95)
  def _reduce_32(val, _values)
                      struct(:CREATE_LIKE, :table => val[2], :like => val[4], :capacity => val[5][:capacity])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 100)
  def _reduce_33(val, _values)
                                    {:capacity => nil, :stream => nil}
                              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 104)
  def _reduce_34(val, _values)
                                    {:capacity => val[0], :stream => nil}
                              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 109)
  def _reduce_35(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 113)
  def _reduce_36(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => nil, :indices => val[4]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 117)
  def _reduce_37(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => nil}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 121)
  def _reduce_38(val, _values)
                            {:hash => {:name => val[0], :type => val[1]}, :range => {:name => val[4], :type => val[5]}, :indices => val[8]}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 126)
  def _reduce_39(val, _values)
                         'S'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 130)
  def _reduce_40(val, _values)
                         'N'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 134)
  def _reduce_41(val, _values)
                         'B'
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 139)
  def _reduce_42(val, _values)
                          {:read => val[2], :write => val[6]}
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 143)
  def _reduce_43(val, _values)
                          {:read => val[6], :write => val[2]}
                    
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 149)
  def _reduce_45(val, _values)
                                 {:read => val[2], :write => val[5]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 153)
  def _reduce_46(val, _values)
                                 {:read => val[5], :write => val[2]}
                           
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 158)
  def _reduce_47(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 162)
  def _reduce_48(val, _values)
                                val[0] + [val[2]]
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 167)
  def _reduce_49(val, _values)
                           {:name => val[1], :key => val[3], :type => val[4], :projection => val[6]}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 171)
  def _reduce_50(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 175)
  def _reduce_51(val, _values)
                           {:name => val[2], :keys => val[4], :projection => val[6], :capacity => val[7], :global => true}
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 180)
  def _reduce_52(val, _values)
                            {:hash => {:key => val[0], :type => val[1]}}
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 184)
  def _reduce_53(val, _values)
                            {
                          :hash => {:key => val[0], :type => val[1]},
                          :range => {:key => val[3], :type => val[4]},
                        }
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 192)
  def _reduce_54(val, _values)
                                {:type => 'ALL'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 196)
  def _reduce_55(val, _values)
                                {:type => 'KEYS_ONLY'}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 200)
  def _reduce_56(val, _values)
                                {:type => 'INCLUDE', :attrs => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 205)
  def _reduce_57(val, _values)
                                   [val[0]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 209)
  def _reduce_58(val, _values)
                                   val[0] + [val[2]]
                             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 214)
  def _reduce_59(val, _values)
                    struct(:DROP, :tables => val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 219)
  def _reduce_60(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 223)
  def _reduce_61(val, _values)
                        struct(:DESCRIBE, :table => val[1])
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 228)
  def _reduce_62(val, _values)
                      struct(:SELECT, :attrs => val[1], :table => val[3], :index => val[4], :conds => val[5], :having => val[6], :order_asc => val[7], :limit => val[8], :count => false)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 232)
  def _reduce_63(val, _values)
                      struct(:SELECT, :attrs => [], :table => val[6], :index => val[7], :conds => val[8], :having => val[9], :order_asc => val[10], :limit => val[11], :count => true)
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 237)
  def _reduce_64(val, _values)
                    struct(:SCAN, :attrs => val[2], :table => val[4], :conds => val[5], :limit => val[6], :count => false, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 241)
  def _reduce_65(val, _values)
                    struct(:SCAN, :attrs => [], :table => val[7], :conds => val[8], :limit => val[9], :count => true, :segment => nil, :total_segments => nil)
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 245)
  def _reduce_66(val, _values)
                    struct(:SCAN, :attrs => val[4], :table => val[6], :conds => val[7], :limit => val[8], :count => false, :segment => val[1], :total_segments => val[3])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 250)
  def _reduce_67(val, _values)
                   struct(:GET, :attrs => val[1], :table => val[3], :conds => val[4])
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 255)
  def _reduce_68(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 259)
  def _reduce_69(val, _values)
                      val[0]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 264)
  def _reduce_70(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 268)
  def _reduce_71(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 274)
  def _reduce_73(val, _values)
                           val[3]
                     
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 280)
  def _reduce_75(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 285)
  def _reduce_76(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 289)
  def _reduce_77(val, _values)
                             val[0] + [val[2]]
                       
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 294)
  def _reduce_78(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 298)
  def _reduce_79(val, _values)
                      [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
                
  end
.,.,

# reduce 80 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 305)
  def _reduce_81(val, _values)
                          :EQ
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 309)
  def _reduce_82(val, _values)
                          :LE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 313)
  def _reduce_83(val, _values)
                          :LT
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 317)
  def _reduce_84(val, _values)
                          :GE
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 321)
  def _reduce_85(val, _values)
                          :GT
                    
  end
.,.,

# reduce 86 omitted

# reduce 87 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 328)
  def _reduce_88(val, _values)
                            val[1]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 333)
  def _reduce_89(val, _values)
                         [val[0]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 337)
  def _reduce_90(val, _values)
                         val[0] + [val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 342)
  def _reduce_91(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 346)
  def _reduce_92(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 350)
  def _reduce_93(val, _values)
                    [val[0], val[1].to_s.upcase.to_sym, [val[2], val[4]]]
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 354)
  def _reduce_94(val, _values)
                    [val[0], val[2].to_s.upcase.to_sym, []]
              
  end
.,.,

# reduce 95 omitted

# reduce 96 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 360)
  def _reduce_97(val, _values)
                      :NE
                
  end
.,.,

# reduce 98 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 366)
  def _reduce_99(val, _values)
                            :NOT_CONTAINS
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 370)
  def _reduce_100(val, _values)
                        :NULL
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 374)
  def _reduce_101(val, _values)
                        :NOT_NULL
                  
  end
.,.,

# reduce 102 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 380)
  def _reduce_103(val, _values)
                       true
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 384)
  def _reduce_104(val, _values)
                       false
                 
  end
.,.,

# reduce 105 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 390)
  def _reduce_106(val, _values)
                       val[1]
                 
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 396)
  def _reduce_108(val, _values)
                       val[1]
                 
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 401)
  def _reduce_109(val, _values)
                      struct(:UPDATE, :table => val[1], :action => val[2], :attrs => val[3], :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 405)
  def _reduce_110(val, _values)
                      struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => val[4], :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 409)
  def _reduce_111(val, _values)
                      attrs = {}
                  val[3].each {|i| attrs[i] = true }
                  struct(:UPDATE, :table => val[1], :action => val[2], :attrs => attrs, :conds => val[4])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 415)
  def _reduce_112(val, _values)
                      attrs = {}
                  val[4].each {|i| attrs[i] = true }
                  struct(:UPDATE_ALL, :table => val[2], :action => val[3], :attrs => attrs, :conds => val[5], :limit => val[6])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 422)
  def _reduce_113(val, _values)
                     :PUT
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 426)
  def _reduce_114(val, _values)
                     :ADD
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 431)
  def _reduce_115(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 435)
  def _reduce_116(val, _values)
                        :DELETE
                  
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 440)
  def _reduce_117(val, _values)
                              [val[0]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 444)
  def _reduce_118(val, _values)
                              val[0] + [val[2]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 449)
  def _reduce_119(val, _values)
                         [val[0], val[2]]
                   
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 454)
  def _reduce_120(val, _values)
                              val[1]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 459)
  def _reduce_121(val, _values)
                           [val[0]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 463)
  def _reduce_122(val, _values)
                           val[0] + [val[2]]
                     
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 468)
  def _reduce_123(val, _values)
                      [val[0], val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 473)
  def _reduce_124(val, _values)
                      struct(:DELETE, :table => val[2], :conds => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 477)
  def _reduce_125(val, _values)
                      struct(:DELETE_ALL, :table => val[3], :conds => val[4], :limit => val[5])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 482)
  def _reduce_126(val, _values)
                      struct(:INSERT, :table => val[2], :attrs => val[4], :values => val[7])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 486)
  def _reduce_127(val, _values)
                      struct(:INSERT_SELECT, :table => val[2], :select => val[3])
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 490)
  def _reduce_128(val, _values)
                      struct(:INSERT_SCAN, :table => val[2], :select => val[3])
                
  end
.,.,

# reduce 129 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 497)
  def _reduce_130(val, _values)
                              [val[1]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 501)
  def _reduce_131(val, _values)
                              val[0] + [val[3]]
                        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 506)
  def _reduce_132(val, _values)
                            [val[0]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 510)
  def _reduce_133(val, _values)
                            val[0] + [val[2]]
                      
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 515)
  def _reduce_134(val, _values)
                    struct(:NEXT)
              
  end
.,.,

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 528)
  def _reduce_142(val, _values)
               val[1]
         
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 533)
  def _reduce_143(val, _values)
                     [val[0]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 537)
  def _reduce_144(val, _values)
                     val[0] + [val[2]]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 542)
  def _reduce_145(val, _values)
              {}
        
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 546)
  def _reduce_146(val, _values)
              val[1]
        
  end
.,.,

# reduce 147 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 552)
  def _reduce_148(val, _values)
                    val[0].merge(val[2])
              
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 557)
  def _reduce_149(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 561)
  def _reduce_150(val, _values)
                   {val[0] => val[2]}
             
  end
.,.,

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

module_eval(<<'.,.,', 'ddb-parser.y', 570)
  def _reduce_154(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 574)
  def _reduce_155(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 578)
  def _reduce_156(val, _values)
                     val[1]
               
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 583)
  def _reduce_157(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 587)
  def _reduce_158(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 592)
  def _reduce_159(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 596)
  def _reduce_160(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 601)
  def _reduce_161(val, _values)
                      Set[val[0]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 605)
  def _reduce_162(val, _values)
                       val[0] + Set[val[2]]
                
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 610)
  def _reduce_163(val, _values)
                          [val[0]]
                    
  end
.,.,

module_eval(<<'.,.,', 'ddb-parser.y', 614)
  def _reduce_164(val, _values)
                          val[0] + [val[2]]
                    
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser


end # DynamoDB
